defineStructure(
"HamcrestMatchersTest",function(factory){with(factory) { typeTable(["org.mockito.Matchers","cl"],["org.mockito.Mockito","cl"],["org.hamcrest.BaseMatcher","cl"],["org.hamcrest.Description","it"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.MockitoAnnotations","cl"],["org.mockito.MockitoAnnotations$Mock","st an"],["org.mockito.exceptions.verification.ArgumentsAreDifferent","cl"],["org.mockitousage.IMethods","it"],["org.mockitousage.matchers.HamcrestMatchersTest","cl"],["java.lang.SuppressWarnings","an"],["org.mockitousage.matchers.HamcrestMatchersTest$ContainsX","cl"],["java.lang.String","cl"],["java.lang.Object","cl"],["org.hamcrest.Matcher","it"],["java.lang.CharSequence","it"],["org.hamcrest.SelfDescribing","it"],["org.mockito.internal.progress.OngoingStubbing","it"],["junit.framework.Assert","cl"],["org.mockito.util.Assertor","it"]),methodTable([12,"matches",[14],"me"],[15,"matches",[14],"me"],[13,"contains",[16],"me"],[12,"describeTo",[3],"me"],[17,"describeTo",[3],"me"],[3,"appendText",[13],"me"],[10,"shouldAcceptHamcrestMatcher",[],"me"],[1,"stub",[14],"st me"],[9,"simpleMethod",[13],"me"],[1,"argThat",[15],"st me"],[12,"ContainsX",[],"co"],[18,"toReturn",[14],"me"],[19,"assertNull",[14],"st me"],[19,"assertEquals",[13,13],"st me"],[10,"shouldVerifyUsingHamcrestMatcher",[],"me"],[1,"verify",[14],"st me"],[1,"argThat",[15],"st me"],[19,"fail",[],"st me"],[5,"assertThat",[14,20],"me"],[5,"messageContains",[13],"st me"]),localVariableTable(["o","~ContainsX-matches(java.lang.Object)-o"],["d","~ContainsX-describeTo(org.hamcrest.Description)-d"],["e","shouldVerifyUsingHamcrestMatcher()-e"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage.matchers;",nl,nl,ip,_,s," org.mockito.",T(0),".*;",nl,ip,_,s," org.mockito.",T(1),".*;",nl,nl,ip," org.hamcrest.",T(2),";",nl,ip," org.hamcrest.",T(3),";",nl,ip," org.junit.",T(4),";",nl,ip," org.mockito.",T(5),";",nl,ip," org.mockito.",T(6),".",T(7),";",nl,ip," org.mockito.exceptions.verification.",T(8),";",nl,ip," org.mockitousage.",T(9),";",nl,nl,C(10,[],$("@",T(11),P(L("\"unchecked\"")),nl,pu,_,c,_,I("HamcrestMatchersTest"),_,ex,_,T(5),_,B(nl,w(4),nl,w(4),C(12,[],$(pi,_,f,_,c,_,I("ContainsX"),_,ex,_,T(2),"&lt;",T(13),"> ",B(nl,w(8),M(0,[1],[],$(pu,_,b,_,I("matches"),P(V(0,$(T(14),_,I("o")))),_,B(nl,w(12),r,_,P(P(T(13)),_,W(0)),".",N(2),P(L("\"X\"")),";",nl,w(8)))),nl,nl,w(8),M(3,[4],[],$(pu,_,v,_,I("describeTo"),P(V(1,$(T(3),_,I("d")))),_,B(nl,w(12),W(1),".",N(5),P(L("\"contains 'X'\"")),";",nl,w(8)))),nl,w(4)))),nl,nl,w(4),F("@",T(7),_,pi,_,T(9),_,I("mock"),";"),nl,nl,w(4),M(6,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldAcceptHamcrestMatcher"),P(),_,B(nl,w(8),N(7),P(G(10,"fi","mock"),".",N(8),P(N(9),P(n,_,N(10),P()))),".",N(11),P(L("\"X\"")),";",nl,w(8),N(12),P(G(10,"fi","mock"),".",N(8),P(L("\"blah\""))),";",nl,w(8),N(13),P(L("\"X\""),", ",G(10,"fi","mock"),".",N(8),P(L("\"blah X blah\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(14,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldVerifyUsingHamcrestMatcher"),P(),_,B(nl,w(8),G(10,"fi","mock"),".",N(8),P(L("\"blah\"")),";",nl,w(8),nl,w(8),tr,_,B(nl,w(12),N(15),P(G(10,"fi","mock")),".",N(8),P(N(16),P(n,_,N(10),P())),";",nl,w(12),N(17),P(),";",nl,w(8)),_,ct,_,P(V(2,$(T(8),_,I("e")))),_,B(nl,w(12),N(18),P(W(2),", ",N(19),P(L("\"contains 'X'\""))),";",nl,w(8)),nl,w(4)))),nl))));}});