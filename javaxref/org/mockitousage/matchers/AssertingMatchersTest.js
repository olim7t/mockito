defineStructure(
"AssertingMatchersTest",function(factory){with(factory) { typeTable(["org.mockito.Matchers","cl"],["org.mockito.Mockito","cl"],["org.junit.Before","an"],["org.junit.Ignore","an"],["org.junit.Test","an"],["org.mockito.ArgumentMatcher","cl"],["org.mockito.TestBase","cl"],["org.mockitousage.IMethods","it"],["org.mockitousage.matchers.AssertingMatchersTest","cl"],["java.lang.Class","cl"],["org.mockitousage.matchers.AssertingMatchersTest$Article","cl"],["java.lang.String","cl"],["java.lang.Object","cl"],["org.hamcrest.Matcher","it"],["org.mockitousage.matchers.AssertingMatchersTest$0$0","cl"],["junit.framework.Assert","cl"]),methodTable([8,"setUp",[],"me"],[1,"mock",[9],"st me"],[10,"Article",["int",11],"co"],[10,"getPageNumber",[],"me"],[10,"getHeadline",[],"me"],[8,"shouldUseCustomCharMatcher1",[],"me"],[7,"simpleMethod",[12],"me"],[1,"argThat",[13],"st me"],[14,"matches",[12],"me"],[5,"matches",[12],"me"],[15,"assertEquals",["int","int"],"st me"],[1,"verify",[12],"st me"]),localVariableTable(["headline","~Article-<init>(int,java.lang.String)-headline"],["argument","~$1-matches(java.lang.Object)-argument"],["o","~$1-matches(java.lang.Object)-o"],["articleOnPage12","shouldUseCustomCharMatcher1()-articleOnPage12"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage.matchers;",nl,nl,ip,_,s," org.mockito.",T(0),".*;",nl,ip,_,s," org.mockito.",T(1),".*;",nl,nl,ip," org.junit.",T(2),";",nl,ip," org.junit.",T(3),";",nl,ip," org.junit.",T(4),";",nl,ip," org.mockito.",T(5),";",nl,ip," org.mockito.",T(1),";",nl,ip," org.mockito.",T(6),";",nl,ip," org.mockitousage.",T(7),";",nl,nl,C(8,[],$("@",T(3),P(L("\"that's just prototyping\"")),nl,pu,_,c,_,I("AssertingMatchersTest"),_,ex,_,T(6),_,B(nl,w(4),nl,w(4),F(pi,_,T(7),_,I("mock"),";"),nl,nl,w(4),M(0,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("setUp"),P(),_,B(nl,w(8),G(8,"fi","mock")," = ",T(1),".",N(1),P(T(7),".",c),";",nl,w(4)))),nl,w(4),nl,w(4),C(10,[],$(c," Article ",B(nl,w(8),nl,w(8),pi,_,j," pageNumber;",nl,w(8),F(pi,_,T(11),_,I("headline"),";"),nl,w(8),nl,w(8),M(2,[],[],$(pu," Article",P(j," pageNumber, ",V(0,$(T(11),_,I("headline")))),_,B(nl,w(12),su,P(),";",nl,w(12),t,".pageNumber = pageNumber;",nl,w(12),t,".",G(10,"fi","headline")," = ",W(0),";",nl,w(8)))),nl,nl,w(8),M(3,[],[],$(pu,_,j,_,I("getPageNumber"),P(),_,B(nl,w(12),r," pageNumber;",nl,w(8)))),nl,nl,w(8),M(4,[],[],$(pu,_,T(11),_,I("getHeadline"),P(),_,B(nl,w(12),r,_,G(10,"fi","headline"),";",nl,w(8)))),nl,w(4)))),nl,w(4),nl,w(4),M(5,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldUseCustomCharMatcher1"),P(),_,B(nl,w(8),G(8,"fi","mock"),".",N(6),P(n,_,N(2),P(L("12"),", ",L("\"Fabulous article\""))),";",nl,w(8),nl,w(8),V(3,$(T(10),_,I("articleOnPage12")," = ",N(7),P(n,_,T(5),"&lt;",T(10),">",P(),_,B(C(14,[],$(nl,w(12),M(8,[9],[],$(pu,_,b,_,I("matches"),P(V(1,$(T(12),_,I("argument")))),_,B(nl,w(16),V(2,$(T(10),_,I("o")," = ",P(T(10)),_,W(1),";")),nl,w(16),N(10),P(L("12"),", ",W(2),".",N(3),P()),";",nl,w(16),r,_,L("true"),";",nl,w(12))))))),_),";")),nl,w(8),nl,w(8),N(11),P(G(8,"fi","mock")),".",N(6),P(W(3)),";",nl,w(8),nl,w(8),O("//Assertors?"),nl,w(8),nl,O("//",w(8),"verify(mock).simpleMethod(argThat(new ArgumentAssertor&lt;Article>() {"),nl,O("//",w(12),"public void assertArgument(Object argument) {"),nl,O("//",w(16),"Article o = (Article) argument;"),nl,O("//",w(16),"assertEquals(\"two\", o.getHeadline());"),nl,O("//",w(12),"}} ));"),nl,w(4)))),nl))));}});