defineStructure(
"MockitoRunner",function(factory){with(factory) { typeTable(["org.junit.internal.runners.InitializationError","cl"],["org.junit.internal.runners.JUnit4ClassRunner","cl"],["org.mockito.MockitoAnnotations","cl"],["org.mockitousage.examples.junitrunner.MockitoRunner","cl"],["java.lang.Class","cl"],["java.lang.Override","an"],["java.lang.Object","cl"],["java.lang.Exception","cl"]),methodTable([3,"MockitoRunner",[4],"co"],[3,"createTest",[],"me"],[1,"createTest",[],"me"],[2,"initMocks",[6],"st me"]),localVariableTable(["klass","<init>(java.lang.Class)-klass"],["test","createTest()-test"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage.examples.junitrunner;",nl,nl,ip," org.junit.internal.runners.",T(0),";",nl,ip," org.junit.internal.runners.",T(1),";",nl,ip," org.mockito.",T(2),";",nl,nl,C(3,[],$(pu,_,c,_,I("MockitoRunner"),_,ex,_,T(1),_,B(nl,nl,w(4),M(0,[],[],$(pu," MockitoRunner",P(V(0,$(T(4),"&lt;?> ",I("klass")))),_,ts,_,T(0),_,B(nl,w(8),su,P(W(0)),";",nl,w(4)))),nl,w(4),nl,w(4),M(1,[2],[],$("@",T(5),nl,w(4),po,_,T(6),_,I("createTest"),P(),_,ts,_,T(7),_,B(nl,w(8),V(1,$(T(6),_,I("test")," = ",su,".",N(2),P(),";")),nl,w(8),T(2),".",N(3),P(W(1)),";",nl,w(8),r,_,W(1),";",nl,w(4)))),nl))));}});