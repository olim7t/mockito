defineStructure(
"ConfiguringDefaultReturnValuesUsingRunnerTest",function(factory){with(factory) { typeTable(["org.junit.Assert","cl"],["org.mockito.Mockito","cl"],["org.junit.Test","an"],["org.junit.runner.RunWith","an"],["org.mockitousage.examples.configure.withrunner.ConfiguringDefaultReturnValuesUsingRunnerTest","cl"],["org.mockitousage.examples.configure.withrunner.MakesMocksNotToReturnNulls","cl"],["java.lang.Exception","cl"],["org.mockitousage.examples.configure.withrunner.ConfiguringDefaultReturnValuesUsingRunnerTest$MyObject","st it"],["java.lang.Class","cl"],["java.lang.Object","cl"]),methodTable([4,"shouldReturnMocksByDefaultInsteadOfNulls",[],"me"],[1,"mock",[8],"st me"],[7,"foo",[],"me"],[0,"assertNotNull",[9],"st me"]),localVariableTable(["m","shouldReturnMocksByDefaultInsteadOfNulls()-m"],["returned","shouldReturnMocksByDefaultInsteadOfNulls()-returned"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage.examples.configure.withrunner;",nl,ip,_,s," org.junit.",T(0),".*;",nl,ip,_,s," org.mockito.",T(1),".*;",nl,nl,ip," org.junit.",T(2),";",nl,ip," org.junit.runner.",T(3),";",nl,nl,C(4,[],$("@",T(3),P(T(5),".",c),nl,pu,_,c,_,I("ConfiguringDefaultReturnValuesUsingRunnerTest"),_,B(nl,w(4),nl,w(4),M(0,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldReturnMocksByDefaultInsteadOfNulls"),P(),_,ts,_,T(6),_,B(nl,w(8),V(0,$(T(7),_,I("m")," = ",N(1),P(T(7),".",c),";")),nl,w(8),O("//mocks don't return nulls any more..."),nl,w(8),O("//the configuration is in the junit runner"),nl,w(8),V(1,$(T(7),_,I("returned")," = ",W(0),".",N(2),P(),";")),nl,w(8),N(3),P(W(1)),";",nl,w(8),N(3),P(W(1),".",N(2),P()),";",nl,w(4)))),nl,nl,w(4),C(7,[],$(it,_,I("MyObject"),_,B(nl,w(8),M(2,[],[],$(T(7),_,I("foo"),P(),";")),nl,w(4)))),nl))));}});