defineStructure(
"FriendlyReturnValues",function(factory){with(factory) { typeTable(["org.mockito.Mockito","cl"],["org.mockito.configuration.ReturnValues","it"],["org.mockito.configuration.experimental.ConfigurationSupport","cl"],["org.mockito.invocation.InvocationOnMock","it"],["org.mockitousage.examples.configure.FriendlyReturnValues","cl"],["java.lang.Object","cl"],["java.lang.Class","cl"],["java.lang.reflect.Method","cl"]),methodTable([4,"valueFor",[3],"me"],[1,"valueFor",[3],"me"],[3,"getMethod",[],"me"],[7,"getReturnType",[],"me"],[2,"defaultValueFor",[3],"st me"],[2,"isMockable",[6],"st me"],[0,"mock",[6],"st me"]),localVariableTable(["invocation","valueFor(org.mockito.invocation.InvocationOnMock)-invocation"],["returnType","valueFor(org.mockito.invocation.InvocationOnMock)-returnType"],["defaultReturnValue","valueFor(org.mockito.invocation.InvocationOnMock)-defaultReturnValue"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage.examples.configure;",nl,nl,ip," org.mockito.",T(0),";",nl,ip," org.mockito.configuration.",T(1),";",nl,ip," org.mockito.configuration.experimental.",T(2),";",nl,ip," org.mockito.invocation.",T(3),";",nl,nl,O("/**",nl," * tries to return mocks instead of nulls",nl," */"),nl,C(4,[],$(pu,_,c,_,I("FriendlyReturnValues"),_,im,_,T(1),_,B(nl,nl,w(4),M(0,[1],[],$(pu,_,T(5),_,I("valueFor"),P(V(0,$(T(3),_,I("invocation")))),_,B(nl,nl,w(8),V(1,$(T(6),"&lt;?> ",I("returnType")," = ",W(0),".",N(2),P(),".",N(3),P(),";")),nl,nl,w(8),V(2,$(T(5),_,I("defaultReturnValue")," = ",T(2),".",N(4),P(W(0)),";")),nl,nl,w(8),i,_,P(W(2)," != ",L("null")," || !",T(2),".",N(5),P(W(1))),_,B(nl,w(12),r,_,W(2),";",nl,w(8)),_,e,_,B(nl,w(12),r,_,T(0),".",N(6),P(W(1)),";",nl,w(8)),nl,w(4)))),nl))));}});