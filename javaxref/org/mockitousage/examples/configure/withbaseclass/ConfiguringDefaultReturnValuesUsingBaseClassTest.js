defineStructure(
"ConfiguringDefaultReturnValuesUsingBaseClassTest",function(factory){with(factory) { typeTable(["org.junit.Assert","cl"],["org.mockito.Mockito","cl"],["org.junit.Test","an"],["org.mockitousage.examples.configure.withbaseclass.ConfiguringDefaultReturnValuesUsingBaseClassTest","cl"],["org.mockitousage.examples.configure.withbaseclass.MakesMocksNotToReturnNulls","cl"],["java.lang.Exception","cl"],["org.mockitousage.examples.configure.withbaseclass.ConfiguringDefaultReturnValuesUsingBaseClassTest$MyObject","st it"],["java.lang.Class","cl"],["java.lang.Object","cl"]),methodTable([3,"shouldReturnMocksByDefaultInsteadOfNulls",[],"me"],[1,"mock",[7],"st me"],[6,"foo",[],"me"],[0,"assertNotNull",[8],"st me"],[0,"assertEquals",["long","long"],"st me"],[6,"bar",[],"me"]),localVariableTable(["m","shouldReturnMocksByDefaultInsteadOfNulls()-m"],["returned","shouldReturnMocksByDefaultInsteadOfNulls()-returned"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage.examples.configure.withbaseclass;",nl,ip,_,s," org.junit.",T(0),".*;",nl,ip,_,s," org.mockito.",T(1),".*;",nl,nl,ip," org.junit.",T(2),";",nl,nl,C(3,[],$(pu,_,c,_,I("ConfiguringDefaultReturnValuesUsingBaseClassTest"),_,ex,_,T(4),_,B(nl,w(4),nl,w(4),M(0,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldReturnMocksByDefaultInsteadOfNulls"),P(),_,ts,_,T(5),_,B(nl,w(8),V(0,$(T(6),_,I("m")," = ",N(1),P(T(6),".",c),";")),nl,w(8),O("//mocks don't return nulls any more..."),nl,w(8),O("//the configuration code is hidden in the base class"),nl,w(8),V(1,$(T(6),_,I("returned")," = ",W(0),".",N(2),P(),";")),nl,w(8),N(3),P(W(1)),";",nl,w(8),N(3),P(W(1),".",N(2),P()),";",nl,w(8),nl,w(8),N(4),P(L("0"),", ",W(1),".",N(5),P()),";",nl,w(4)))),nl,nl,w(4),C(6,[],$(it,_,I("MyObject"),_,B(nl,w(8),M(2,[],[],$(T(6),_,I("foo"),P(),";")),nl,w(8),M(5,[],[],$(j,_,I("bar"),P(),";")),nl,w(4)))),nl))));}});