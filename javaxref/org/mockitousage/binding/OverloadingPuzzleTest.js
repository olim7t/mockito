defineStructure(
"OverloadingPuzzleTest",function(factory){with(factory) { typeTable(["org.mockito.Mockito","cl"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.exceptions.verification.WantedButNotInvoked","cl"],["org.mockitousage.binding.OverloadingPuzzleTest","cl"],["org.mockitousage.binding.OverloadingPuzzleTest$Super","st it"],["org.mockitousage.binding.OverloadingPuzzleTest$Sub","st it"],["java.lang.Object","cl"],["java.lang.String","cl"],["java.lang.Exception","cl"],["java.lang.Class","cl"],["junit.framework.Assert","cl"]),methodTable([4,"setMockWithDowncast",[5],"me"],[5,"say",[7],"me"],[6,"say",[8],"me"],[4,"say",[7],"me"],[4,"shouldUseArgumentTypeWhenOverloadingPuzzleDetected",[],"me"],[0,"mock",[10],"st me"],[0,"verify",[7],"st me"],[11,"fail",[],"st me"]),localVariableTable(["mock","setMockWithDowncast(org.mockitousage.binding.OverloadingPuzzleTest.Super)-mock"],["message","~Super-say(java.lang.Object)-message"],["message","~Sub-say(java.lang.String)-message"],["message","say(java.lang.Object)-message"],["sub","shouldUseArgumentTypeWhenOverloadingPuzzleDetected()-sub"],["e","shouldUseArgumentTypeWhenOverloadingPuzzleDetected()-e"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage.binding;",nl,nl,ip,_,s," org.mockito.",T(0),".*;",nl,nl,ip," org.junit.",T(1),";",nl,ip," org.mockito.",T(2),";",nl,ip," org.mockito.exceptions.verification.",T(3),";",nl,nl,C(4,[],$(pu,_,c,_,I("OverloadingPuzzleTest"),_,ex,_,T(2),_,B(nl,nl,w(4),F(pi,_,T(5),_,I("mock"),";"),nl,nl,w(4),M(0,[],[],$(pi,_,v,_,I("setMockWithDowncast"),P(V(0,$(T(5),_,I("mock")))),_,B(nl,w(8),t,".",G(4,"fi","mock")," = ",W(0),";",nl,w(4)))),nl,nl,w(4),C(5,[6],$(pi,_,it,_,I("Super"),_,B(nl,w(8),M(1,[],[],$(v,_,I("say"),P(V(1,$(T(7),_,I("message")))),";")),nl,w(4)))),nl,nl,w(4),C(6,[],$(pi,_,it,_,I("Sub"),_,ex,_,T(5),_,B(nl,w(8),M(2,[],[],$(v,_,I("say"),P(V(2,$(T(8),_,I("message")))),";")),nl,w(4)))),nl,nl,w(4),M(3,[],[],$(pi,_,v,_,I("say"),P(V(3,$(T(7),_,I("message")))),_,B(nl,w(8),G(4,"fi","mock"),".",N(1),P(W(3)),";",nl,w(4)))),nl,nl,w(4),M(4,[],[],$("@",T(1),nl,w(4),pu,_,v,_,I("shouldUseArgumentTypeWhenOverloadingPuzzleDetected"),P(),_,ts,_,T(9),_,B(nl,w(8),V(4,$(T(6),_,I("sub")," = ",N(5),P(T(6),".",c),";")),nl,w(8),N(0),P(W(4)),";",nl,w(8),N(3),P(L("\"Hello\"")),";",nl,w(8),tr,_,B(nl,w(12),N(6),P(W(4)),".",N(2),P(L("\"Hello\"")),";",nl,w(12),N(7),P(),";",nl,w(8)),_,ct,_,P(V(5,$(T(3),_,I("e")))),_,B(),nl,w(4)))),nl))));}});