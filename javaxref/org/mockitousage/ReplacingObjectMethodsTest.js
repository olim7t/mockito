defineStructure(
"ReplacingObjectMethodsTest",function(factory){with(factory) { typeTable(["org.hamcrest.CoreMatchers","cl"],["org.junit.Test","an"],["org.mockito.Mockito","cl"],["org.mockito.TestBase","cl"],["org.mockitousage.ReplacingObjectMethodsTest","cl"],["org.mockitousage.ReplacingObjectMethodsTest$DummyInterface","st it"],["org.mockitousage.ReplacingObjectMethodsTest$DummyClass","cl"],["java.lang.Class","cl"],["junit.framework.Assert","cl"],["java.lang.String","cl"],["java.lang.Object","cl"],["org.mockitousage.ReplacingObjectMethodsTest$ObjectMethodsOverridden","st cl"],["org.hamcrest.Matcher","it"],["org.mockito.util.Assertor","it"],["org.mockitousage.ReplacingObjectMethodsTest$ObjectMethodsOverriddenSubclass","st cl"],["java.lang.RuntimeException","cl"]),methodTable([4,"shouldProvideMockyImplementationOfToString",[],"me"],[2,"mock",[7],"st me"],[8,"assertEquals",[9,9],"st me"],[10,"hashCode",[],"me"],[10,"toString",[],"me"],[4,"testShouldReplaceObjectMethods",[],"me"],[3,"assertThat",[10,12],"me"],[0,"equalTo",[10],"st me"],[0,"not",[12],"st me"],[3,"assertThat",[10,13],"me"],[3,"contains",[9],"st me"],[4,"testShouldReplaceObjectMethodsWhenOverridden",[],"me"],[11,"equals",[10],"me"],[15,"RuntimeException",[9],"co"],[11,"hashCode",[],"me"],[11,"toString",[],"me"]),localVariableTable(["dummyClass","shouldProvideMockyImplementationOfToString()-dummyClass"],["dummyInterface","shouldProvideMockyImplementationOfToString()-dummyInterface"],["mock","testShouldReplaceObjectMethods()-mock"],["otherMock","testShouldReplaceObjectMethods()-otherMock"],["mock","testShouldReplaceObjectMethodsWhenOverridden()-mock"],["otherMock","testShouldReplaceObjectMethodsWhenOverridden()-otherMock"],["o","~ObjectMethodsOverridden-equals(java.lang.Object)-o"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage;",nl,nl,ip,_,s," org.hamcrest.",T(0),".*;",nl,nl,ip," org.junit.",T(1),";",nl,ip," org.mockito.",T(2),";",nl,ip," org.mockito.",T(3),";",nl,nl,C(4,[],$(pu,_,c,_,I("ReplacingObjectMethodsTest"),_,ex,_,T(3),_,B(nl,nl,w(4),C(5,[],$(pi,_,it,_,I("DummyInterface"),_,B())),nl,w(4),C(6,[],$(pi,_,c,_,I("DummyClass"),_,B())),nl,w(4),nl,w(4),M(0,[],[],$("@",T(1),nl,w(4),pu,_,v,_,I("shouldProvideMockyImplementationOfToString"),P(),_,B(nl,w(8),V(0,$(T(6),_,I("dummyClass")," = ",T(2),".",N(1),P(T(6),".",c),";")),nl,w(8),N(2),P(L("\"Mock for DummyClass, hashCode: \"")," + ",W(0),".",N(3),P(),", ",W(0),".",N(4),P()),";",nl,w(8),V(1,$(T(5),_,I("dummyInterface")," = ",T(2),".",N(1),P(T(5),".",c),";")),nl,w(8),N(2),P(L("\"Mock for DummyInterface, hashCode: \"")," + ",W(1),".",N(3),P(),", ",W(1),".",N(4),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(5,[],[],$("@",T(1)," ",nl,w(4),pu,_,v,_,I("testShouldReplaceObjectMethods"),P(),_,B(nl,w(8),V(2,$(T(10),_,I("mock")," = ",T(2),".",N(1),P(T(11),".",c),";")),nl,w(8),V(3,$(T(10),_,I("otherMock")," = ",T(2),".",N(1),P(T(11),".",c),";")),nl,w(8),nl,w(8),N(6),P(W(2),", ",N(7),P(W(2))),";",nl,w(8),N(6),P(W(2),", ",N(8),P(N(7),P(W(3)))),";",nl,w(8),nl,w(8),N(6),P(W(2),".",N(3),P(),", ",N(8),P(N(7),P(W(3),".",N(3),P()))),";",nl,w(8),nl,w(8),N(9),P(W(2),".",N(4),P(),", ",N(10),P(L("\"Mock for ObjectMethodsOverridden\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(11,[],[],$("@",T(1)," ",nl,w(4),pu,_,v,_,I("testShouldReplaceObjectMethodsWhenOverridden"),P(),_,B(nl,w(8),V(4,$(T(10),_,I("mock")," = ",T(2),".",N(1),P(T(14),".",c),";")),nl,w(8),V(5,$(T(10),_,I("otherMock")," = ",T(2),".",N(1),P(T(14),".",c),";")),nl,w(8),nl,w(8),N(6),P(W(4),", ",N(7),P(W(4))),";",nl,w(8),N(6),P(W(4),", ",N(8),P(N(7),P(W(5)))),";",nl,w(8),nl,w(8),N(6),P(W(4),".",N(3),P(),", ",N(8),P(N(7),P(W(5),".",N(3),P()))),";",nl,w(8),nl,w(8),N(9),P(W(4),".",N(4),P(),", ",N(10),P(L("\"Mock for ObjectMethodsOverriddenSubclass\""))),";",nl,w(4)))),nl,w(4),nl,w(4),C(11,[14],$(pu,_,s,_,c,_,I("ObjectMethodsOverridden"),_,B(nl,w(8),M(12,[],[],$(pu,_,b,_,I("equals"),P(V(6,$(T(10),_,I("o")))),_,B(nl,w(12),tw,_,n,_,N(13),P(L("\"Should not be called. MethodInterceptorFilter provides implementation\"")),";",nl,w(8)))),nl,w(8),M(14,[],[],$(pu,_,j,_,I("hashCode"),P(),_,B(nl,w(12),tw,_,n,_,N(13),P(L("\"Should not be called. MethodInterceptorFilter provides implementation\"")),";",nl,w(8)))),nl,w(8),M(15,[],[],$(pu,_,T(9),_,I("toString"),P(),_,B(nl,w(12),tw,_,n,_,N(13),P(L("\"Should not be called. MethodInterceptorFilter provides implementation\"")),";",nl,w(8)))),nl,w(4)))),nl,w(4),nl,w(4),C(14,[],$(pu,_,s,_,c,_,I("ObjectMethodsOverriddenSubclass"),_,ex,_,T(11),_,B(nl,w(4)))),nl))));}});