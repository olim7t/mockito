defineStructure(
"StackTrackeChangingTest",function(factory){with(factory) { typeTable(["org.mockito.Mockito","cl"],["org.mockito.util.ExtraMatchers","cl"],["org.junit.Before","an"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.exceptions.verification.ArgumentsAreDifferent","cl"],["org.mockitousage.StackTrackeChangingTest","cl"],["org.mockitousage.IMethods","it"],["java.lang.Class","cl"],["java.lang.String","cl"],["junit.framework.Assert","cl"],["java.lang.Object","cl"],["org.mockito.util.Assertor","it"],["java.lang.Throwable","cl"]),methodTable([6,"setup",[],"me"],[0,"mock",[8],"st me"],[6,"simpleMethodOnAMock",[],"me"],[7,"simpleMethod",[9],"me"],[6,"shouldShowActualInvocationAsExceptionCause",[],"me"],[6,"verifySimpleMethodOnAMock",[],"me"],[10,"fail",[],"st me"],[4,"assertThat",[11,12],"me"],[1,"hasMethodInStackTraceAt",["int",9],"st me"],[13,"getCause",[],"me"],[0,"verify",[11],"st me"],[7,"simpleMethod",[],"me"]),localVariableTable(["e","shouldShowActualInvocationAsExceptionCause()-e"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockitousage;",nl,nl,ip,_,s," org.mockito.",T(0),".*;",nl,ip,_,s," org.mockito.util.",T(1),".*;",nl,nl,ip," org.junit.",T(2),";",nl,ip," org.junit.",T(3),";",nl,ip," org.mockito.",T(0),";",nl,ip," org.mockito.",T(4),";",nl,ip," org.mockito.exceptions.verification.",T(5),";",nl,nl,C(6,[],$(pu,_,c,_,I("StackTrackeChangingTest"),_,ex,_,T(4),_,B(nl,w(4),nl,w(4),F(pi,_,T(7),_,I("mock"),";"),nl,nl,w(4),M(0,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("setup"),P(),_,B(nl,w(8),G(6,"fi","mock")," = ",T(0),".",N(1),P(T(7),".",c),";",nl,w(4)))),nl,w(4),nl,w(4),M(2,[],[],$(pi,_,v,_,I("simpleMethodOnAMock"),P(),_,B(nl,w(8),G(6,"fi","mock"),".",N(3),P(L("\"blah\"")),";",nl,w(4)))),nl,w(4),nl,w(4),M(4,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("shouldShowActualInvocationAsExceptionCause"),P(),_,B(nl,w(8),N(2),P(),";",nl,w(8),tr,_,B(nl,w(12),N(5),P(),";",nl,w(12),N(6),P(),";",nl,w(8)),_,ct,_,P(V(0,$(T(5),_,I("e")))),_,B(nl,w(12),N(7),P(W(0),", ",N(8),P(L("0"),", ",L("\"verifySimpleMethodOnAMock\""))),";",nl,w(12),N(7),P(W(0),", ",N(8),P(L("1"),", ",L("\"shouldShowActualInvocationAsExceptionCause\""))),";",nl,w(12),N(7),P(W(0),".",N(9),P(),", ",N(8),P(L("0"),", ",L("\"simpleMethodOnAMock\""))),";",nl,w(12),N(7),P(W(0),".",N(9),P(),", ",N(8),P(L("1"),", ",L("\"shouldShowActualInvocationAsExceptionCause\""))),";",nl,w(8)),nl,w(4)))),nl,nl,w(4),M(5,[],[],$(pi,_,v,_,I("verifySimpleMethodOnAMock"),P(),_,B(nl,w(8),N(10),P(G(6,"fi","mock")),".",N(11),P(),";",w(8),nl,w(4)))),nl))),nl);}});