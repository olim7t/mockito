defineStructure(
"ArgumentsAreDifferentEclipseReady",function(factory){with(factory) { typeTable(["org.mockito.exceptions.verification.ArgumentsAreDifferentEclipseReady","cl"]),methodTable(),localVariableTable()
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.exceptions.verification;",nl,nl,nl,C(0,[],$(pu,_,c,_,I("ArgumentsAreDifferentEclipseReady"),_,O("/*extends ComparisonFailure implements HasStackTrace*/"),_,B(nl,w(4),nl,w(4),O("//coming in next release...."),nl,O("//"),nl,O("//",w(4),"private static final long serialVersionUID = 1L;"),nl,O("//",w(4),"private final String message;"),nl,O("//",w(4),"private StackTraceElement[] unfilteredStackTrace;"),nl,O("//"),nl,O("//",w(4),"public ArgumentsAreDifferentEclipseReady(String message, Throwable cause, String wanted, String actual) {"),nl,O("//",w(8),"super(message, wanted, actual);"),nl,O("//",w(8),"this.message = message;"),nl,O("//",w(8)),nl,O("//",w(8),"unfilteredStackTrace = getStackTrace();"),nl,O("//",w(8),"StackTraceFilter filter = new StackTraceFilter();"),nl,O("//",w(8),"filter.filterStackTrace(this);"),nl,O("//",w(8)),nl,O("//",w(8),"this.initCause(cause);"),nl,O("//",w(8),"CommonStackTraceRemover remover = new CommonStackTraceRemover();"),nl,O("//",w(8),"remover.remove(this, Arrays.asList(cause.getStackTrace()));"),nl,O("//",w(4),"}"),nl,O("//",w(4)),nl,O("//",w(4),"@Override"),nl,O("//",w(4),"public String getMessage() {"),nl,O("//",w(8),"return message;"),nl,O("//",w(4),"}"),nl,O("//",w(4)),nl,O("//",w(4),"public StackTraceElement[] getUnfilteredStackTrace() {"),nl,O("//",w(8),"return unfilteredStackTrace;"),nl,O("//",w(4),"}"),nl))),nl);}});