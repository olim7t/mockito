defineStructure(
"MockitoAssertionError",function(factory){with(factory) { typeTable(["java.util.Arrays","cl"],["org.mockito.exceptions.base.MockitoAssertionError","cl"],["org.mockito.exceptions.verification.ArgumentsAreDifferent","cl"],["org.mockito.exceptions.verification.NeverWantedButInvoked","cl"],["org.mockito.exceptions.verification.NoInteractionsWanted","cl"],["org.mockito.exceptions.verification.TooLittleActualInvocations","cl"],["org.mockito.exceptions.verification.TooManyActualInvocations","cl"],["org.mockito.exceptions.verification.VerifcationInOrderFailure","cl"],["org.mockito.exceptions.verification.WantedButNotInvoked","cl"],["java.lang.AssertionError","cl"],["org.mockito.exceptions.base.HasStackTrace","it"],["java.lang.StackTraceElement","cl"],["java.lang.String","cl"],["java.lang.Throwable","cl"],["org.mockito.exceptions.base.StackTraceFilter","cl"],["org.mockito.exceptions.base.CommonStackTraceRemover","cl"],["java.util.List","it"]),methodTable([1,"MockitoAssertionError",[12],"co"],[13,"getStackTrace",[],"me"],[14,"StackTraceFilter",[],"co"],[14,"filterStackTrace",[10],"me"],[1,"MockitoAssertionError",[12,13],"co"],[13,"initCause",[13],"me"],[15,"CommonStackTraceRemover",[],"co"],[15,"remove",[10,16],"me"],[0,"asList",["java.lang.Object[]"],"st me"],[1,"getUnfilteredStackTrace",[],"me"]),localVariableTable(["message","<init>(java.lang.String)-message"],["filter","<init>(java.lang.String)-filter"],["message","<init>(java.lang.String,java.lang.Throwable)-message"],["cause","<init>(java.lang.String,java.lang.Throwable)-cause"],["remover","<init>(java.lang.String,java.lang.Throwable)-remover"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.exceptions.base;",nl,nl,ip," java.util.",T(0),";",nl,nl,nl,C(1,[2,3,4,5,6,7,8],$(pu,_,c,_,I("MockitoAssertionError"),_,ex,_,T(9),_,im,_,T(10),_,B(nl,nl,w(4),pi,_,s,_,f,_,l," serialVersionUID = ",L("1L"),";",nl,w(4),F(pi,_,T(11),"[] ",I("unfilteredStackTrace"),";"),nl,nl,w(4),M(0,[],[],$(pu," MockitoAssertionError",P(V(0,$(T(12),_,I("message")))),_,B(nl,w(8),su,P(W(0)),";",nl,nl,w(8),G(1,"fi","unfilteredStackTrace")," = ",N(1),P(),";",nl,w(8),nl,w(8),V(1,$(T(14),_,I("filter")," = ",n,_,N(2),P(),";")),nl,w(8),W(1),".",N(3),P(t),";",nl,w(4)))),nl,w(4),nl,w(4),M(4,[],[],$(pu," MockitoAssertionError",P(V(2,$(T(12),_,I("message"))),", ",V(3,$(T(13),_,I("cause")))),_,B(nl,w(6),N(0),P(W(2)),";",nl,nl,w(8),i,_,P(W(3)," != ",L("null")),_,B(nl,w(12),t,".",N(5),P(W(3)),";",nl,w(12),V(4,$(T(15),_,I("remover")," = ",n,_,N(6),P(),";")),nl,w(12),W(4),".",N(7),P(t,", ",T(0),".",N(8),P(W(3),".",N(1),P())),";",nl,w(8)),nl,w(4)))),nl,nl,w(4),M(9,[],[],$(pu,_,T(11),"[] ",I("getUnfilteredStackTrace"),P(),_,B(nl,w(8),r,_,G(1,"fi","unfilteredStackTrace"),";",nl,w(4)))),nl))));}});