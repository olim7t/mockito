defineStructure(
"CommonStackTraceRemoverTest",function(factory){with(factory) { typeTable(["org.mockito.util.ExtraMatchers","cl"],["java.util.List","it"],["org.junit.Before","an"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.exceptions.base.CommonStackTraceRemoverTest","cl"],["java.lang.SuppressWarnings","an"],["org.mockito.exceptions.base.CommonStackTraceRemover","cl"],["org.mockito.exceptions.base.HasStackTrace","it"],["org.mockito.exceptions.base.TraceBuilder","cl"],["java.lang.StackTraceElement","cl"],["java.lang.Object","cl"],["org.mockito.util.Assertor","it"]),methodTable([5,"setup",[],"me"],[7,"CommonStackTraceRemover",[],"co"],[5,"testShouldNotRemoveWhenStackTracesDontHaveCommonPart",[],"me"],[9,"TraceBuilder",[],"co"],[9,"methods",["java.lang.String[]"],"me"],[9,"toTrace",[],"me"],[9,"toTraceList",[],"me"],[7,"remove",[8,1],"me"],[4,"assertThat",[11,12],"me"],[0,"hasOnlyThoseMethodsInStackTrace",["java.lang.String[]"],"st me"],[5,"testShouldRemoveCommonStackTracePart",[],"me"]),localVariableTable(["exception","testShouldNotRemoveWhenStackTracesDontHaveCommonPart()-exception"],["cause","testShouldNotRemoveWhenStackTracesDontHaveCommonPart()-cause"],["exception","testShouldRemoveCommonStackTracePart()-exception"],["cause","testShouldRemoveCommonStackTracePart()-cause"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.exceptions.base;",nl,nl,ip,_,s," org.mockito.util.",T(0),".*;",nl,nl,ip," java.util.",T(1),";",nl,nl,ip," org.junit.",T(2),";",nl,ip," org.junit.",T(3),";",nl,ip," org.mockito.",T(4),";",nl,nl,C(5,[],$("@",T(6),P(L("\"unchecked\"")),nl,pu,_,c,_,I("CommonStackTraceRemoverTest"),_,ex,_,T(4),_,B(nl,nl,w(4),F(pi,_,T(7),_,I("remover"),";"),nl,w(4),nl,w(4),M(0,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("setup"),P(),_,B(nl,w(8),G(5,"fi","remover")," = ",n,_,N(1),P(),";",nl,w(4)))),nl,nl,w(4),M(2,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("testShouldNotRemoveWhenStackTracesDontHaveCommonPart"),P(),_,B(nl,w(8),V(0,$(T(8),_,I("exception")," = ",n,_,N(3),P(),".",N(4),P(L("\"intercept\"")),".",N(5),P(),";")),nl,w(8),V(1,$(T(1),"&lt;",T(10),"> ",I("cause")," = ",n,_,N(3),P(),".",N(4),P(L("\"foo\"")),".",N(6),P(),";")),nl,w(8),nl,w(8),G(5,"fi","remover"),".",N(7),P(W(0),", ",W(1)),";",nl,w(8),nl,w(8),N(8),P(W(0),", ",N(9),P(L("\"intercept\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(10,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("testShouldRemoveCommonStackTracePart"),P(),_,B(nl,w(8),V(2,$(T(8),_,I("exception")," = ",n,_,N(3),P(),".",N(4),P(L("\"intercept\""),", ",L("\"handle\""),", ",L("\"foo\""),", ",L("\"bar\"")),".",N(5),P(),";")),nl,w(8),V(3,$(T(1),"&lt;",T(10),"> ",I("cause")," = ",n,_,N(3),P(),".",N(4),P(L("\"intercept\""),", ",L("\"handle\""),", ",L("\"hello\""),", ",L("\"world\"")),".",N(6),P(),";")),nl,w(8),nl,w(8),G(5,"fi","remover"),".",N(7),P(W(2),", ",W(3)),";",nl,w(8),nl,w(8),N(8),P(W(2),", ",N(9),P(L("\"bar\""),", ",L("\"foo\""))),";",nl,w(4)))),nl))));}});