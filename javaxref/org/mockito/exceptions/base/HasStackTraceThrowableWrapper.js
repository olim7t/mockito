defineStructure(
"HasStackTraceThrowableWrapper",function(factory){with(factory) { typeTable(["org.mockito.exceptions.base.HasStackTraceThrowableWrapper","cl"],["org.mockito.exceptions.base.HasStackTrace","it"],["java.lang.Throwable","cl"],["java.lang.StackTraceElement","cl"]),methodTable([0,"HasStackTraceThrowableWrapper",[2],"co"],[0,"getStackTrace",[],"me"],[1,"getStackTrace",[],"me"],[2,"getStackTrace",[],"me"],[0,"setStackTrace",["java.lang.StackTraceElement[]"],"me"],[1,"setStackTrace",["java.lang.StackTraceElement[]"],"me"],[2,"setStackTrace",["java.lang.StackTraceElement[]"],"me"]),localVariableTable(["throwable","<init>(java.lang.Throwable)-throwable"],["stackTrace","setStackTrace(java.lang.StackTraceElement[])-stackTrace"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.exceptions.base;",nl,nl,C(0,[],$(pu,_,c,_,I("HasStackTraceThrowableWrapper"),_,im,_,T(1),_,B(nl,nl,w(4),F(pi,_,f,_,T(2),_,I("throwable"),";"),nl,nl,w(4),M(0,[],[],$(pu," HasStackTraceThrowableWrapper",P(V(0,$(T(2),_,I("throwable")))),_,B(nl,w(8),t,".",G(0,"fi","throwable")," = ",W(0),";",nl,w(4)))),nl,w(4),nl,w(4),M(1,[2],[],$(pu,_,T(3),"[] ",I("getStackTrace"),P(),_,B(nl,w(8),r,_,G(0,"fi","throwable"),".",N(3),P(),";",nl,w(4)))),nl,nl,w(4),M(4,[5],[],$(pu,_,v,_,I("setStackTrace"),P(V(1,$(T(3),"[] ",I("stackTrace")))),_,B(nl,w(8),G(0,"fi","throwable"),".",N(6),P(W(1)),";",nl,w(4)))),nl))));}});