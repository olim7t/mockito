defineStructure(
"StackTraceRemoverTest",function(factory){with(factory) { typeTable(["org.mockito.util.ExtraMatchers","cl"],["java.util.LinkedList","cl"],["java.util.List","it"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.exceptions.base.StackTraceRemoverTest","cl"],["java.lang.StackTraceElement","cl"],["java.lang.String","cl"],["org.mockito.exceptions.base.StackTraceRemoverTest$SomeException","cl"],["org.mockito.exceptions.base.HasStackTrace","it"],["java.lang.Object","cl"],["org.mockito.exceptions.base.CommonStackTraceRemover","cl"],["org.mockito.exceptions.base.StackTraceBuilder","cl"],["java.lang.Exception","cl"],["org.mockito.util.Assertor","it"],["junit.framework.Assert","cl"]),methodTable([8,"getStackTrace",[],"me"],[9,"getStackTrace",[],"me"],[8,"setStackTrace",["java.lang.StackTraceElement[]"],"me"],[9,"setStackTrace",["java.lang.StackTraceElement[]"],"me"],[1,"LinkedList",[],"co"],[2,"add",[10],"me"],[6,"getMethodName",[],"me"],[5,"remove",[],"me"],[11,"CommonStackTraceRemover",[],"co"],[8,"SomeException",[],"co"],[11,"remove",[9,2],"me"],[5,"setStackTrace",["java.lang.String[]"],"me"],[12,"StackTraceBuilder",[],"co"],[12,"methods",["java.lang.String[]"],"me"],[12,"toStackTrace",[],"me"],[5,"setCauseStackTrace",["java.lang.String[]"],"me"],[12,"toStackTraceList",[],"me"],[5,"shouldRemoveCommonStackTrace",[],"me"],[4,"assertThat",[10,14],"me"],[0,"hasExactlyInOrder",["java.lang.Object[]"],"st me"],[5,"shouldRemoveCommonWhenExceptionTraceHasRecursion",[],"me"],[5,"shouldRemoveCommonWhenActualTraceHasRecursion",[],"me"],[5,"shouldRemoveCommonWhenOnlyOneMethodOnStackTrace",[],"me"],[15,"assertTrue",["boolean"],"st me"],[2,"isEmpty",[],"me"],[5,"shouldRemoveCommonWhenOneMethodEach",[],"me"]),localVariableTable(["stackTrace","~SomeException-setStackTrace(java.lang.StackTraceElement[])-stackTrace"],["e","~SomeException-setStackTrace(java.lang.StackTraceElement[])-e"],["remover","remove()-remover"],["exception","remove()-exception"],["methods","setStackTrace(java.lang.String[])-methods"],["methods","setCauseStackTrace(java.lang.String[])-methods"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.exceptions.base;",nl,nl,ip,_,s," org.mockito.util.",T(0),".*;",nl,nl,ip," java.util.",T(1),";",nl,ip," java.util.",T(2),";",nl,nl,ip," org.junit.",T(3),";",nl,ip," org.mockito.",T(4),";",nl,nl,C(5,[],$(pu,_,c,_,I("StackTraceRemoverTest"),_,ex,_,T(4),_,B(nl,nl,w(4),F(pi,_,T(6),"[] ",I("stackTrace"),";"),nl,w(4),F(pi,_,T(2),"&lt;",T(6),"> ",I("causeStackTrace"),";"),nl,w(4),F(pi,_,T(2),"&lt;",T(7),"> ",I("methodsOnTraceAfterRemoving"),";"),nl,w(4),nl,w(4),C(8,[],$(pi,_,c,_,I("SomeException"),_,im,_,T(9),_,B(nl,w(8),M(0,[1],[],$(pu,_,T(6),"[] ",I("getStackTrace"),P(),_,B(nl,w(12),r,_,G(5,"fi","stackTrace"),";",nl,w(8)))),nl,w(8),M(2,[3],[],$(pu,_,v,_,I("setStackTrace"),P(V(0,$(T(6),"[] ",I("stackTrace")))),_,B(nl,w(12),G(5,"fi","methodsOnTraceAfterRemoving")," = ",n,_,N(4),P(),";",nl,w(12),fo,P(V(1,$(T(6),_,I("e")))," : ",W(0)),_,B(nl,w(16),G(5,"fi","methodsOnTraceAfterRemoving"),".",N(5),P(W(1),".",N(6),P()),";",nl,w(12)),nl,w(8)))),nl,w(4)))),nl,w(4),nl,w(4),M(7,[],[],$(pi,_,v,_,I("remove"),P(),_,B(nl,w(8),V(2,$(T(11),_,I("remover")," = ",n,_,N(8),P(),";")),nl,w(8),V(3,$(T(8),_,I("exception")," = ",n,_,N(9),P(),";")),nl,w(8),W(2),".",N(10),P(W(3),", ",G(5,"fi","causeStackTrace")),";",nl,w(4)))),nl,w(4),nl,w(4),M(11,[],[],$(pi,_,v,_,I("setStackTrace"),P(V(4,$(T(7)," ... ",I("methods")))),_,B(nl,w(8),G(5,"fi","stackTrace")," = ",n,_,N(12),P(),".",N(13),P(W(4)),".",N(14),P(),";",nl,w(4)))),nl,w(4),nl,w(4),M(15,[],[],$(pi,_,v,_,I("setCauseStackTrace"),P(V(5,$(T(7)," ... ",I("methods")))),_,B(nl,w(8),G(5,"fi","causeStackTrace")," = ",n,_,N(12),P(),".",N(13),P(W(5)),".",N(16),P(),";",nl,w(4)))),nl,w(4),nl,w(4),M(17,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("shouldRemoveCommonStackTrace"),P(),_,ts,_,T(13),_,B(nl,w(8),N(11),P(L("\"methodOne\""),", ",L("\"methodTwo\""),", ",L("\"methodThree\""),", ",L("\"commonMethodOne\""),", ",L("\"commonMethodTwo\"")),";",nl,w(8),N(15),P(L("\"actualOne\""),", ",L("\"actualTwo\""),", ",L("\"commonMethodOne\""),", ",L("\"commonMethodTwo\"")),";",nl,w(8),N(7),P(),";",nl,w(8),N(18),P(G(5,"fi","methodsOnTraceAfterRemoving"),", ",N(19),P(nl,w(16),L("\"methodOne\""),",",nl,w(16),L("\"methodTwo\""),",",nl,w(16),L("\"methodThree\""),nl,w(8))),";",nl,w(4)))),nl,w(4),nl,w(4),M(20,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("shouldRemoveCommonWhenExceptionTraceHasRecursion"),P(),_,ts,_,T(13),_,B(nl,w(8),N(11),P(L("\"methodOne\""),", ",L("\"commonMethodOne\""),", ",L("\"commonMethodTwo\""),", ",L("\"commonMethodOne\""),", ",L("\"commonMethodTwo\"")),";",nl,w(8),N(15),P(L("\"actualOne\""),", ",L("\"commonMethodOne\""),", ",L("\"commonMethodTwo\"")),";",nl,w(8),N(7),P(),";",nl,w(8),N(18),P(G(5,"fi","methodsOnTraceAfterRemoving"),", ",N(19),P(nl,w(16),L("\"methodOne\""),",",nl,w(16),L("\"commonMethodOne\""),",",nl,w(16),L("\"commonMethodTwo\""),nl,w(8))),";",nl,w(4)))),nl,nl,w(4),M(21,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("shouldRemoveCommonWhenActualTraceHasRecursion"),P(),_,ts,_,T(13),_,B(nl,w(8),N(11),P(L("\"methodOne\""),", ",L("\"commonMethodOne\"")),";",nl,w(8),N(15),P(L("\"actualOne\""),", ",L("\"commonMethodOne\""),", ",L("\"actualOne\""),", ",L("\"commonMethodOne\"")),";",nl,w(8),N(7),P(),";",nl,w(8),N(18),P(G(5,"fi","methodsOnTraceAfterRemoving"),", ",N(19),P(nl,w(16),L("\"methodOne\""),nl,w(8))),";",nl,w(4)))),nl,w(4),nl,w(4),M(22,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("shouldRemoveCommonWhenOnlyOneMethodOnStackTrace"),P(),_,ts,_,T(13),_,B(nl,w(8),N(11),P(L("\"commonOne\"")),";",nl,w(8),N(15),P(L("\"commonOne\"")),";",nl,w(8),N(7),P(),";",nl,w(8),N(23),P(G(5,"fi","methodsOnTraceAfterRemoving"),".",N(24),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(25,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("shouldRemoveCommonWhenOneMethodEach"),P(),_,ts,_,T(13),_,B(nl,w(8),N(11),P(L("\"one\""),", ",L("\"commonOne\"")),";",nl,w(8),N(15),P(L("\"two\""),", ",L("\"commonOne\"")),";",nl,w(8),N(7),P(),";",nl,w(8),N(18),P(G(5,"fi","methodsOnTraceAfterRemoving"),", ",N(19),P(nl,w(16),L("\"one\""),nl,w(8))),";",nl,w(4)))),nl))));}});