defineStructure(
"InOrderVerifier",function(factory){with(factory) { typeTable(["java.util.LinkedList","cl"],["java.util.List","it"],["org.mockito.exceptions.Reporter","cl"],["org.mockito.internal.progress.VerificationMode","it"],["org.mockito.internal.progress.VerificationModeImpl","cl"],["org.mockito.InOrderVerifier","cl"],["org.mockito.InOrder","it"],["java.lang.Object","cl"],["java.util.Collection","it"],["java.lang.Integer","cl"],["org.mockito.Mockito","cl"]),methodTable([2,"Reporter",[],"co"],[0,"LinkedList",[],"co"],[5,"InOrderVerifier",[1],"co"],[1,"addAll",[8],"me"],[5,"verify",[7],"me"],[6,"verify",[7],"me"],[5,"verify",[7,3],"me"],[4,"times",["int"],"st me"],[6,"verify",[7,3],"me"],[1,"contains",[7],"me"],[2,"inOrderRequiresFamiliarMock",[],"me"],[4,"wantedCount",[],"me"],[10,"verify",[7,3],"st me"],[4,"inOrder",[9,1],"st me"]),localVariableTable(["mocksToBeVerifiedInOrder","<init>(java.util.List)-mocksToBeVerifiedInOrder"],["mock","verify(java.lang.Object)-mock"],["mock","verify(java.lang.Object,org.mockito.internal.progress.VerificationMode)-mock"],["mode","verify(java.lang.Object,org.mockito.internal.progress.VerificationMode)-mode"],["wantedCount","verify(java.lang.Object,org.mockito.internal.progress.VerificationMode)-wantedCount"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito;",nl,nl,ip," java.util.",T(0),";",nl,ip," java.util.",T(1),";",nl,nl,ip," org.mockito.exceptions.",T(2),";",nl,ip," org.mockito.internal.progress.",T(3),";",nl,ip," org.mockito.internal.progress.",T(4),";",nl,nl,O("/**",nl," * Allows verifying in order. This class should not be exposed, hence default access.",nl," */"),nl,C(5,[],$(c," InOrderVerifier ",im,_,T(6),_,B(nl,w(4),nl,w(4),F(pi,_,f,_,T(2),_,I("reporter")," = ",n,_,N(0),P(),";"),nl,w(4),F(pi,_,f,_,T(1),"&lt;",T(7),"> ",I("mocksToBeVerifiedInOrder")," = ",n,_,N(1),P(),";"),nl,w(4),nl,w(4),M(2,[],[],$(pu," InOrderVerifier",P(V(0,$(T(1),"&lt;",T(7),"> ",I("mocksToBeVerifiedInOrder")))),_,B(nl,w(8),t,".",G(5,"fi","mocksToBeVerifiedInOrder"),".",N(3),P(W(0)),";",nl,w(4)))),nl,nl,w(4),M(4,[5],[],$(pu," &lt;T> T ",I("verify"),P(V(1,$("T ",I("mock")))),_,B(nl,w(8),r,_,t,".",N(6),P(W(1),", ",T(4),".",N(7),P(L("1"))),";",nl,w(4)))),nl,w(4),nl,w(4),M(6,[8],[],$(pu," &lt;T> T ",I("verify"),P(V(2,$("T ",I("mock"))),", ",V(3,$(T(3),_,I("mode")))),_,B(nl,w(8),i,_,P("!",G(5,"fi","mocksToBeVerifiedInOrder"),".",N(9),P(W(2))),_,B(nl,w(12),G(5,"fi","reporter"),".",N(10),P(),";",nl,w(8)),nl,w(8),V(4,$(T(9),_,I("wantedCount")," = ",P(P(T(4)),_,W(3)),".",N(11),P(),";")),nl,w(8),r,_,T(10),".",N(12),P(W(2),", ",T(4),".",N(13),P(W(4),", ",G(5,"fi","mocksToBeVerifiedInOrder"))),";",nl,w(4)))),nl))),nl);}});