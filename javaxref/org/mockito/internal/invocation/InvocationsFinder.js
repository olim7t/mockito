defineStructure(
"InvocationsFinder",function(factory){with(factory) { typeTable(["java.util.LinkedList","cl"],["java.util.List","it"],["org.mockito.exceptions.base.HasStackTrace","it"],["org.mockito.internal.progress.VerificationModeImpl","cl"],["org.mockito.internal.util.ListUtil","cl"],["org.mockito.internal.util.ListUtil$Filter","st it"],["org.mockito.internal.invocation.InvocationsFinder","cl"],["org.mockito.internal.verification.InvocationsFinderStub","cl"],["org.mockito.internal.invocation.InvocationMatcher","cl"],["org.mockito.internal.invocation.Invocation","cl"],["org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching","cl"],["java.lang.Object","cl"],["org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder","cl"],["java.util.AbstractCollection","cl"]),methodTable([6,"findInvocations",[1,8,3],"me"],[7,"findInvocations",[1,8,3],"me"],[4,"filter",[1,5],"st me"],[10,"RemoveNotMatching",[8],"co"],[6,"findAllMatchingUnverifiedChunks",[1,8],"me"],[7,"findAllMatchingUnverifiedChunks",[1,8],"me"],[6,"removeVerifiedInOrder",[1],"me"],[6,"findMatchingChunk",[1,8,3],"me"],[7,"findMatchingChunk",[1,8,3],"me"],[6,"getFirstMatchingChunk",[8,1],"me"],[3,"atLeastOnceMode",[],"me"],[3,"matchesActualCount",["int"],"me"],[1,"size",[],"me"],[0,"LinkedList",[],"co"],[8,"matches",[9],"me"],[1,"add",[11],"me"],[1,"isEmpty",[],"me"],[6,"findSimilarInvocation",[1,8,3],"me"],[7,"findSimilarInvocation",[1,8,3],"me"],[8,"hasSimilarMethod",[9],"me"],[8,"hasSameMethod",[9],"me"],[6,"findFirstUnverified",[1],"me"],[7,"findFirstUnverified",[1],"me"],[6,"findFirstUnverified",[1,11],"me"],[9,"getMock",[],"me"],[9,"isVerified",[],"me"],[6,"getLastStackTrace",[1],"me"],[1,"get",["int"],"me"],[9,"getStackTrace",[],"me"],[6,"findPreviousVerifiedInOrder",[1],"me"],[7,"findPreviousVerifiedInOrder",[1],"me"],[12,"RemoveUnverifiedInOrder",[],"co"],[13,"isEmpty",[],"me"],[0,"getLast",[],"me"],[9,"isVerifiedInOrder",[],"me"],[1,"clear",[],"me"],[10,"isOut",[9],"me"],[5,"isOut",[11],"me"],[12,"isOut",[9],"me"]),localVariableTable(["invocations","findInvocations(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-invocations"],["wanted","findInvocations(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-wanted"],["mode","findInvocations(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-mode"],["invocations","findAllMatchingUnverifiedChunks(java.util.List,org.mockito.internal.invocation.InvocationMatcher)-invocations"],["wanted","findAllMatchingUnverifiedChunks(java.util.List,org.mockito.internal.invocation.InvocationMatcher)-wanted"],["unverified","findAllMatchingUnverifiedChunks(java.util.List,org.mockito.internal.invocation.InvocationMatcher)-unverified"],["invocations","findMatchingChunk(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-invocations"],["wanted","findMatchingChunk(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-wanted"],["mode","findMatchingChunk(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-mode"],["unverified","findMatchingChunk(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-unverified"],["firstChunk","findMatchingChunk(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-firstChunk"],["wanted","getFirstMatchingChunk(org.mockito.internal.invocation.InvocationMatcher,java.util.List)-wanted"],["unverified","getFirstMatchingChunk(org.mockito.internal.invocation.InvocationMatcher,java.util.List)-unverified"],["firstChunk","getFirstMatchingChunk(org.mockito.internal.invocation.InvocationMatcher,java.util.List)-firstChunk"],["invocation","getFirstMatchingChunk(org.mockito.internal.invocation.InvocationMatcher,java.util.List)-invocation"],["invocations","findSimilarInvocation(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-invocations"],["wanted","findSimilarInvocation(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-wanted"],["mode","findSimilarInvocation(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-mode"],["firstSimilar","findSimilarInvocation(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-firstSimilar"],["invocation","findSimilarInvocation(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-invocation"],["invocations","findFirstUnverified(java.util.List)-invocations"],["invocations","findFirstUnverified(java.util.List,java.lang.Object)-invocations"],["mock","findFirstUnverified(java.util.List,java.lang.Object)-mock"],["i","findFirstUnverified(java.util.List,java.lang.Object)-i"],["invocations","getLastStackTrace(java.util.List)-invocations"],["last","getLastStackTrace(java.util.List)-last"],["invocations","findPreviousVerifiedInOrder(java.util.List)-invocations"],["verifiedOnly","findPreviousVerifiedInOrder(java.util.List)-verifiedOnly"],["invocations","removeVerifiedInOrder(java.util.List)-invocations"],["unverified","removeVerifiedInOrder(java.util.List)-unverified"],["i","removeVerifiedInOrder(java.util.List)-i"],["wanted","~RemoveNotMatching-<init>(org.mockito.internal.invocation.InvocationMatcher)-wanted"],["invocation","~RemoveNotMatching-isOut(org.mockito.internal.invocation.Invocation)-invocation"],["invocation","~RemoveUnverifiedInOrder-isOut(org.mockito.internal.invocation.Invocation)-invocation"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.invocation;",nl,nl,ip," java.util.",T(0),";",nl,ip," java.util.",T(1),";",nl,nl,ip," org.mockito.exceptions.base.",T(2),";",nl,ip," org.mockito.internal.progress.",T(3),";",nl,ip," org.mockito.internal.util.",T(4),";",nl,ip," org.mockito.internal.util.",T(4),".",T(5),";",nl,nl,C(6,[7],$(pu,_,c,_,I("InvocationsFinder"),_,B(nl,nl,w(4),M(0,[],[1],$(pu,_,T(1),"&lt;",T(9),"> ",I("findInvocations"),P(V(0,$(T(1),"&lt;",T(9),"> ",I("invocations"))),", ",V(1,$(T(8),_,I("wanted"))),", ",V(2,$(T(3),_,I("mode")))),_,B(nl,w(8),r,_,T(4),".",N(2),P(W(0),", ",n,_,N(3),P(W(1))),";",nl,w(4)))),nl,nl,w(4),M(4,[],[5],$(pu,_,T(1),"&lt;",T(9),"> ",I("findAllMatchingUnverifiedChunks"),P(V(3,$(T(1),"&lt;",T(9),"> ",I("invocations"))),", ",V(4,$(T(8),_,I("wanted")))),_,B(nl,w(8),V(5,$(T(1),"&lt;",T(9),"> ",I("unverified")," = ",N(6),P(W(3)),";")),nl,w(8),r,_,T(4),".",N(2),P(W(5),", ",n,_,N(3),P(W(4))),";",nl,w(4)))),nl,nl,w(4),O("/**",nl,w(5),"* some examples how it works:",nl,w(5),"* ",nl,w(5),"* Given invocations sequence:",nl,w(5),"* 1,1,2,1",nl,w(5),"* ",nl,w(5),"* if wanted is 1 and mode is times(2) then returns",nl,w(5),"* 1,1  ",nl,w(5),"* ",nl,w(5),"* if wanted is 1 and mode is atLeastOnce() then returns",nl,w(5),"* 1,1,1",nl,w(5),"* ",nl,w(5),"* if wanted is 1 and mode is times(x), where x != 2 then returns",nl,w(5),"* 1,1,1",nl,w(5),"*/"),nl,w(4),M(7,[],[8],$(pu,_,T(1),"&lt;",T(9),"> ",I("findMatchingChunk"),P(V(6,$(T(1),"&lt;",T(9),"> ",I("invocations"))),", ",V(7,$(T(8),_,I("wanted"))),", ",V(8,$(T(3),_,I("mode")))),_,B(nl,w(8),V(9,$(T(1),"&lt;",T(9),"> ",I("unverified")," = ",N(6),P(W(6)),";")),nl,w(8),V(10,$(T(1),"&lt;",T(9),"> ",I("firstChunk")," = ",N(9),P(W(7),", ",W(9)),";")),nl,w(8),nl,w(8),i,_,P(W(8),".",N(10),P()," || !",W(8),".",N(11),P(W(10),".",N(12),P())),_,B(nl,w(12),r,_,t,".",N(4),P(W(6),", ",W(7)),";",nl,w(8)),_,e,_,B(nl,w(12),r,_,W(10),";",nl,w(8)),nl,w(4)))),nl,nl,w(4),M(9,[],[],$(pi,_,T(1),"&lt;",T(9),"> ",I("getFirstMatchingChunk"),P(V(11,$(T(8),_,I("wanted"))),", ",V(12,$(T(1),"&lt;",T(9),"> ",I("unverified")))),_,B(nl,w(8),V(13,$(T(1),"&lt;",T(9),"> ",I("firstChunk")," = ",n,_,N(13),P(),";")),nl,w(8),fo,_,P(V(14,$(T(9),_,I("invocation")))," : ",W(12)),_,B(nl,w(12),i,_,P(W(11),".",N(14),P(W(14))),_,B(nl,w(16),W(13),".",N(15),P(W(14)),";",nl,w(12)),_,e,_,i,_,P("!",W(13),".",N(16),P()),_,B(nl,w(16),br,";",nl,w(12)),nl,w(8)),nl,w(8),r,_,W(13),";",nl,w(4)))),nl,w(4),nl,w(4),M(17,[],[18],$(pu,_,T(9),_,I("findSimilarInvocation"),P(V(15,$(T(1),"&lt;",T(9),"> ",I("invocations"))),", ",V(16,$(T(8),_,I("wanted"))),", ",V(17,$(T(3),_,I("mode")))),_,B(nl,w(8),V(18,$(T(9),_,I("firstSimilar")," = ",L("null"),";")),nl,w(8),fo,_,P(V(19,$(T(9),_,I("invocation")))," : ",W(15)),_,B(nl,w(12),i,_,P("!",W(16),".",N(19),P(W(19))),_,B(nl,w(16),co,";",nl,w(12)),nl,w(12),i,_,P(W(18)," == ",L("null")),_,B(nl,w(16),W(18)," = ",W(19),";",nl,w(12)),nl,w(12),i,_,P(W(16),".",N(20),P(W(19))),_,B(nl,w(16),r,_,W(19),";",nl,w(12)),nl,w(8)),nl,w(8),nl,w(8),r,_,W(18),";",nl,w(4)))),nl,w(4),nl,w(4),M(21,[],[22],$(pu,_,T(9),_,I("findFirstUnverified"),P(V(20,$(T(1),"&lt;",T(9),"> ",I("invocations")))),_,B(nl,w(8),r,_,N(23),P(W(20),", ",L("null")),";",nl,w(4)))),nl,w(4),nl,w(4),M(23,[],[],$(T(9),_,I("findFirstUnverified"),P(V(21,$(T(1),"&lt;",T(9),"> ",I("invocations"))),", ",V(22,$(T(11),_,I("mock")))),_,B(nl,w(8),fo,_,P(V(23,$(T(9),_,I("i")))," : ",W(21)),_,B(nl,w(12),b," mockIsValid = ",W(22)," == ",L("null")," || ",W(22)," == ",W(23),".",N(24),P(),";",nl,w(12),i,_,P("!",W(23),".",N(25),P()," &amp;&amp; mockIsValid"),_,B(nl,w(16),r,_,W(23),";",nl,w(12)),nl,w(8)),nl,w(8),r,_,L("null"),";",nl,w(4)))),nl,nl,w(4),M(26,[],[],$(pu,_,T(2),_,I("getLastStackTrace"),P(V(24,$(T(1),"&lt;",T(9),"> ",I("invocations")))),_,B(nl,w(8),i,_,P(W(24),".",N(16),P()),_,B(nl,w(12),r,_,L("null"),";",nl,w(8)),_,e,_,B(nl,w(12),V(25,$(T(9),_,I("last")," = ",W(24),".",N(27),P(W(24),".",N(12),P()," - ",L("1")),";")),nl,w(12),r,_,W(25),".",N(28),P(),";",nl,w(8)),nl,w(4)))),nl,w(4),nl,w(4),M(29,[],[30],$(pu,_,T(9),_,I("findPreviousVerifiedInOrder"),P(V(26,$(T(1),"&lt;",T(9),"> ",I("invocations")))),_,B(nl,w(8),V(27,$(T(0),"&lt;",T(9),"> ",I("verifiedOnly")," = ",T(4),".",N(2),P(W(26),", ",n,_,N(31),P()),";")),nl,w(8),nl,w(8),i,_,P(W(27),".",N(32),P()),_,B(nl,w(12),r,_,L("null"),";",nl,w(8)),_,e,_,B(nl,w(12),r,_,W(27),".",N(33),P(),";",nl,w(8)),nl,w(4)))),nl,w(4),nl,w(4),M(6,[],[],$(pi,_,T(1),"&lt;",T(9),"> ",I("removeVerifiedInOrder"),P(V(28,$(T(1),"&lt;",T(9),"> ",I("invocations")))),_,B(nl,w(8),V(29,$(T(1),"&lt;",T(9),"> ",I("unverified")," = ",n,_,N(13),P(),";")),nl,w(8),fo,_,P(V(30,$(T(9),_,I("i")))," : ",W(28)),_,B(nl,w(12),i,_,P(W(30),".",N(34),P()),_,B(nl,w(16),W(29),".",N(35),P(),";",nl,w(12)),_,e,_,B(nl,w(16),W(29),".",N(15),P(W(30)),";",nl,w(12)),nl,w(8)),nl,w(8),r,_,W(29),";",nl,w(4)))),nl,w(4),nl,w(4),C(10,[],$(pi,_,c,_,I("RemoveNotMatching"),_,im,_,T(5),"&lt;",T(9),"> ",B(nl,w(8),F(pi,_,f,_,T(8),_,I("wanted"),";"),nl,nl,w(8),M(3,[],[],$(pi," RemoveNotMatching",P(V(31,$(T(8),_,I("wanted")))),_,B(nl,w(12),t,".",G(10,"fi","wanted")," = ",W(31),";",nl,w(8)))),nl,nl,w(8),M(36,[37],[],$(pu,_,b,_,I("isOut"),P(V(32,$(T(9),_,I("invocation")))),_,B(nl,w(12),r," !",G(10,"fi","wanted"),".",N(14),P(W(32)),";",nl,w(8)))),nl,w(4)))),nl,nl,w(4),C(12,[],$(pi,_,c,_,I("RemoveUnverifiedInOrder"),_,im,_,T(5),"&lt;",T(9),"> ",B(nl,w(8),M(38,[37],[],$(pu,_,b,_,I("isOut"),P(V(33,$(T(9),_,I("invocation")))),_,B(nl,w(12),r," !",W(33),".",N(34),P(),";",nl,w(8)))),nl,w(4)))),nl))));}});