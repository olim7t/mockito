defineStructure(
"InvocationMatcherTest",function(factory){with(factory) { typeTable(["java.util.Arrays","cl"],["org.mockito.util.ExtraMatchers","cl"],["java.lang.reflect.Method","cl"],["java.util.HashMap","cl"],["java.util.Map","it"],["org.hamcrest.Matcher","it"],["org.junit.Before","an"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.MockitoAnnotations","cl"],["org.mockito.MockitoAnnotations$Mock","st an"],["org.mockito.internal.matchers.Equals","cl"],["org.mockito.internal.matchers.NotNull","cl"],["org.mockitousage.IMethods","it"],["org.mockito.internal.invocation.InvocationMatcherTest","cl"],["java.lang.SuppressWarnings","an"],["org.mockito.internal.invocation.InvocationMatcher","cl"],["org.mockito.internal.invocation.InvocationBuilder","cl"],["java.lang.Object","cl"],["java.lang.Exception","cl"],["org.mockito.internal.invocation.Invocation","cl"],["java.util.List","it"],["org.mockito.util.Assertor","it"],["junit.framework.Assert","cl"],["java.lang.String","cl"],["java.lang.Class","cl"]),methodTable([14,"setup",[],"me"],[17,"InvocationBuilder",[],"co"],[17,"mock",[18],"me"],[17,"simpleMethod",[],"me"],[17,"toInvocationMatcher",[],"me"],[14,"shouldBuildEqualsMatchersWhenNullPassed",[],"me"],[16,"InvocationMatcher",[20,21],"co"],[17,"args",["java.lang.Object[]"],"me"],[17,"toInvocation",[],"me"],[8,"assertThat",[18,22],"me"],[16,"getMatchers",[],"me"],[1,"hasExactlyInOrder",["java.lang.Object[]"],"st me"],[11,"Equals",[18],"co"],[14,"shouldBeACitizenOfHashes",[],"me"],[3,"HashMap",[],"co"],[4,"put",[18,18],"me"],[16,"InvocationMatcher",[20],"co"],[23,"assertEquals",["int","int"],"st me"],[4,"size",[],"me"],[14,"shouldNotEqualIfNumberOfArgumentsDiffer",[],"me"],[23,"assertFalse",["boolean"],"st me"],[18,"equals",[18],"me"],[14,"shouldToStringWithMatchers",[],"me"],[0,"asList",["java.lang.Object[]"],"st me"],[16,"toString",[],"me"],[8,"contains",[24],"st me"],[14,"shouldKnowIfIsSimilarTo",[],"me"],[23,"assertTrue",["boolean"],"st me"],[16,"hasSimilarMethod",[20],"me"],[17,"differentMethod",[],"me"],[14,"shouldNotBeSimilarToVerifiedInvocation",[],"me"],[17,"verified",[],"me"],[14,"shouldNotBeSimilarIfMocksAreDifferent",[],"me"],[14,"shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg",[],"me"],[25,"getMethod",[24,"java.lang.Class[]"],"me"],[17,"method",[2],"me"],[17,"arg",[18],"me"],[14,"shouldBeSimilarIfIsOverloadedButUsedWithDifferentArg",[],"me"]),localVariableTable(["m","shouldBuildEqualsMatchersWhenNullPassed()-m"],["invocation","shouldBeACitizenOfHashes()-invocation"],["invocationTwo","shouldBeACitizenOfHashes()-invocationTwo"],["map","shouldBeACitizenOfHashes()-map"],["withOneArg","shouldNotEqualIfNumberOfArgumentsDiffer()-withOneArg"],["withTwoArgs","shouldNotEqualIfNumberOfArgumentsDiffer()-withTwoArgs"],["m","shouldToStringWithMatchers()-m"],["notNull","shouldToStringWithMatchers()-notNull"],["mTwo","shouldToStringWithMatchers()-mTwo"],["equals","shouldToStringWithMatchers()-equals"],["same","shouldKnowIfIsSimilarTo()-same"],["different","shouldKnowIfIsSimilarTo()-different"],["verified","shouldNotBeSimilarToVerifiedInvocation()-verified"],["onDifferentMock","shouldNotBeSimilarIfMocksAreDifferent()-onDifferentMock"],["method","shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg()-method"],["overloadedMethod","shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg()-overloadedMethod"],["sameArg","shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg()-sameArg"],["invocation","shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg()-invocation"],["overloadedInvocation","shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg()-overloadedInvocation"],["method","shouldBeSimilarIfIsOverloadedButUsedWithDifferentArg()-method"],["overloadedMethod","shouldBeSimilarIfIsOverloadedButUsedWithDifferentArg()-overloadedMethod"],["invocation","shouldBeSimilarIfIsOverloadedButUsedWithDifferentArg()-invocation"],["overloadedInvocation","shouldBeSimilarIfIsOverloadedButUsedWithDifferentArg()-overloadedInvocation"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.invocation;",nl,nl,ip,_,s," java.util.",T(0),".*;",nl,ip,_,s," org.mockito.util.",T(1),".*;",nl,nl,ip," java.lang.reflect.",T(2),";",nl,ip," java.util.",T(3),";",nl,ip," java.util.",T(4),";",nl,nl,ip," org.hamcrest.",T(5),";",nl,ip," org.junit.",T(6),";",nl,ip," org.junit.",T(7),";",nl,ip," org.mockito.",T(8),";",nl,ip," org.mockito.",T(9),".",T(10),";",nl,ip," org.mockito.internal.matchers.",T(11),";",nl,ip," org.mockito.internal.matchers.",T(12),";",nl,ip," org.mockitousage.",T(13),";",nl,nl,C(14,[],$("@",T(15),P(L("\"unchecked\"")),nl,pu,_,c,_,I("InvocationMatcherTest"),_,ex,_,T(8),_,B(nl,nl,w(4),F(pi,_,T(16),_,I("simpleMethod"),";"),nl,w(4),F("@",T(10),_,pi,_,T(13),_,I("mock"),";")," ",nl,w(4),nl,w(4),M(0,[],[],$("@",T(6),nl,w(4),pu,_,v,_,I("setup"),P(),_,B(nl,w(8),G(14,"fi","simpleMethod")," = ",n,_,N(1),P(),".",N(2),P(G(14,"fi","mock")),".",N(3),P(),".",N(4),P(),";",nl,w(4)))),nl,nl,w(4),M(5,[],[],$(pu,_,v,_,I("shouldBuildEqualsMatchersWhenNullPassed"),P(),_,ts,_,T(19),_,B(nl,w(8),V(0,$(T(16),_,I("m")," = ",n,_,N(6),P(n,_,N(1),P(),".",N(7),P(L("\"foo\"")),".",N(8),P(),", ",L("null")),";")),nl,w(8),N(9),P(W(0),".",N(10),P(),", ",N(11),P(n,_,N(12),P(L("\"foo\"")))),";",nl,w(4)))),nl,w(4),nl,w(4),M(13,[],[],$("@",T(7),nl,w(4),pu,_,v,_,I("shouldBeACitizenOfHashes"),P(),_,ts,_,T(19),_,B(nl,w(8),V(1,$(T(20),_,I("invocation")," = ",n,_,N(1),P(),".",N(8),P(),";")),nl,w(8),V(2,$(T(20),_,I("invocationTwo")," = ",n,_,N(1),P(),".",N(7),P(L("\"blah\"")),".",N(8),P(),";")),nl,w(8),nl,w(8),V(3,$(T(4),_,I("map")," = ",n,_,N(14),P(),";")),nl,w(8),W(3),".",N(15),P(n,_,N(16),P(W(1)),", ",L("\"one\"")),";",nl,w(8),W(3),".",N(15),P(n,_,N(16),P(W(2)),", ",L("\"two\"")),";",nl,w(8),nl,w(8),N(17),P(L("2"),", ",W(3),".",N(18),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(19,[],[],$("@",T(7),nl,w(4),pu,_,v,_,I("shouldNotEqualIfNumberOfArgumentsDiffer"),P(),_,ts,_,T(19),_,B(nl,w(8),V(4,$(T(16),_,I("withOneArg")," = ",n,_,N(16),P(n,_,N(1),P(),".",N(7),P(L("\"test\"")),".",N(8),P()),";")),nl,w(8),V(5,$(T(16),_,I("withTwoArgs")," = ",n,_,N(16),P(n,_,N(1),P(),".",N(7),P(L("\"test\""),", ",L("100")),".",N(8),P()),";")),nl,nl,w(8),N(20),P(W(4),".",N(21),P(L("null"))),";",nl,w(8),N(20),P(W(4),".",N(21),P(W(5))),";",nl,w(4)))),nl,w(4),nl,w(4),M(22,[],[],$("@",T(7),nl,w(4),pu,_,v,_,I("shouldToStringWithMatchers"),P(),_,ts,_,T(19),_,B(nl,w(8),V(6,$(T(5),_,I("m")," = ",T(12),".",G(12,"st fi","NOT_NULL"),";")),nl,w(8),V(7,$(T(16),_,I("notNull")," = ",n,_,N(6),P(n,_,N(1),P(),".",N(8),P(),", ",N(23),P(W(6))),";")),nl,w(8),V(8,$(T(5),_,I("mTwo")," = ",n,_,N(12),P(L("'x'")),";")),nl,w(8),V(9,$(T(16),_,I("equals")," = ",n,_,N(6),P(n,_,N(1),P(),".",N(8),P(),", ",N(23),P(W(8))),";")),nl,nl,w(8),N(9),P(W(7),".",N(24),P(),", ",N(25),P(L("\"simpleMethod(notNull())\""))),";",nl,w(8),N(9),P(W(9),".",N(24),P(),", ",N(25),P(L("\"simpleMethod('x')\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(26,[],[],$("@",T(7),nl,w(4),pu,_,v,_,I("shouldKnowIfIsSimilarTo"),P(),_,ts,_,T(19),_,B(nl,w(8),V(10,$(T(20),_,I("same")," = ",n,_,N(1),P(),".",N(2),P(G(14,"fi","mock")),".",N(3),P(),".",N(8),P(),";")),nl,w(8),N(27),P(G(14,"fi","simpleMethod"),".",N(28),P(W(10))),";",nl,w(8),nl,w(8),V(11,$(T(20),_,I("different")," = ",n,_,N(1),P(),".",N(2),P(G(14,"fi","mock")),".",N(29),P(),".",N(8),P(),";")),nl,w(8),N(20),P(G(14,"fi","simpleMethod"),".",N(28),P(W(11))),";",nl,w(4)))),nl,w(4),nl,w(4),M(30,[],[],$("@",T(7),nl,w(4),pu,_,v,_,I("shouldNotBeSimilarToVerifiedInvocation"),P(),_,ts,_,T(19),_,B(nl,w(8),V(12,$(T(20),_,I("verified")," = ",n,_,N(1),P(),".",N(3),P(),".",N(31),P(),".",N(8),P(),";")),nl,w(8),N(20),P(G(14,"fi","simpleMethod"),".",N(28),P(W(12))),";",nl,w(4)))),nl,w(7),nl,w(4),M(32,[],[],$("@",T(7),nl,w(4),pu,_,v,_,I("shouldNotBeSimilarIfMocksAreDifferent"),P(),_,ts,_,T(19),_,B(nl,w(8),V(13,$(T(20),_,I("onDifferentMock")," = ",n,_,N(1),P(),".",N(3),P(),".",N(2),P(L("\"different mock\"")),".",N(8),P(),";")),nl,w(8),N(20),P(G(14,"fi","simpleMethod"),".",N(28),P(W(13))),";",nl,w(4)))),w(4),nl,w(4),nl,w(4),M(33,[],[],$("@",T(7),nl,w(4),pu,_,v,_,I("shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg"),P(),_,ts,_,T(19),_,B(nl,w(8),V(14,$(T(2),_,I("method")," = ",T(13),".",c,".",N(34),P(L("\"simpleMethod\""),", ",T(24),".",c),";")),nl,w(8),V(15,$(T(2),_,I("overloadedMethod")," = ",T(13),".",c,".",N(34),P(L("\"simpleMethod\""),", ",T(18),".",c),";")),nl,w(8),nl,w(8),V(16,$(T(24),_,I("sameArg")," = ",L("\"test\""),";")),nl,w(8),nl,w(8),V(17,$(T(16),_,I("invocation")," = ",n,_,N(1),P(),".",N(35),P(W(14)),".",N(36),P(W(16)),".",N(4),P(),";")),nl,w(8),V(18,$(T(20),_,I("overloadedInvocation")," = ",n,_,N(1),P(),".",N(35),P(W(15)),".",N(36),P(W(16)),".",N(8),P(),";")),nl,w(8),nl,w(8),N(20),P(W(17),".",N(28),P(W(18))),";",nl,w(4))))," ",nl,w(4),nl,w(4),M(37,[],[],$("@",T(7),nl,w(4),pu,_,v,_,I("shouldBeSimilarIfIsOverloadedButUsedWithDifferentArg"),P(),_,ts,_,T(19),_,B(nl,w(8),V(19,$(T(2),_,I("method")," = ",T(13),".",c,".",N(34),P(L("\"simpleMethod\""),", ",T(24),".",c),";")),nl,w(8),V(20,$(T(2),_,I("overloadedMethod")," = ",T(13),".",c,".",N(34),P(L("\"simpleMethod\""),", ",T(18),".",c),";")),nl,w(8),nl,w(8),V(21,$(T(16),_,I("invocation")," = ",n,_,N(1),P(),".",N(2),P(G(14,"fi","mock")),".",N(35),P(W(19)),".",N(36),P(L("\"foo\"")),".",N(4),P(),";")),nl,w(8),V(22,$(T(20),_,I("overloadedInvocation")," = ",n,_,N(1),P(),".",N(2),P(G(14,"fi","mock")),".",N(35),P(W(20)),".",N(36),P(L("\"bar\"")),".",N(8),P(),";")),nl,w(8),nl,w(8),N(27),P(W(21),".",N(28),P(W(22))),";",nl,w(4)))),nl))));}});