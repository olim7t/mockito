defineStructure(
"InvocationTest",function(factory){with(factory) { typeTable(["java.lang.reflect.Method","cl"],["java.util.HashMap","cl"],["java.util.List","it"],["java.util.Map","it"],["org.junit.Before","an"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.internal.matchers.ArrayEquals","cl"],["org.mockito.internal.matchers.Equals","cl"],["org.mockitousage.IMethods","it"],["org.mockito.internal.invocation.InvocationTest","cl"],["java.lang.SuppressWarnings","an"],["org.mockito.internal.invocation.Invocation","cl"],["java.lang.Exception","cl"],["org.mockito.internal.invocation.InvocationBuilder","cl"],["java.lang.Object","cl"],["java.lang.String","cl"],["junit.framework.Assert","cl"],["java.lang.RuntimeException","cl"],["java.lang.Throwable","cl"],["org.mockito.util.Assertor","it"],["java.lang.Class","cl"],["org.mockito.invocation.InvocationOnMock","it"]),methodTable([10,"setup",[],"me"],[14,"InvocationBuilder",[],"co"],[14,"args",["java.lang.Object[]"],"me"],[14,"mock",[15],"me"],[14,"toInvocation",[],"me"],[10,"shouldKnowIfIsEqualTo",[],"me"],[16,"String",[16],"co"],[17,"assertFalse",["boolean"],"st me"],[12,"equals",[15],"me"],[17,"assertTrue",["boolean"],"st me"],[10,"shouldEqualToNotConsiderSequenceNumber",[],"me"],[14,"seq",["int"],"me"],[12,"getSequenceNumber",[],"me"],[10,"shouldNotBeACitizenOfHashes",[],"me"],[1,"HashMap",[],"co"],[3,"put",[15,15],"me"],[17,"fail",[],"st me"],[17,"assertEquals",[16,16],"st me"],[19,"getMessage",[],"me"],[10,"shouldPrintMethodName",[],"me"],[12,"toString",[],"me"],[10,"shouldPrintMethodArgs",[],"me"],[6,"assertThat",[15,20],"me"],[6,"endsWith",[16],"st me"],[10,"shouldPrintMethodIntegerArgAndString",[],"me"],[10,"shouldPrintNull",[],"me"],[10,"shouldPrintArray",[],"me"],[14,"method",[16],"me"],[10,"shouldPrintNullIfArrayIsNull",[],"me"],[21,"getMethod",[16,"java.lang.Class[]"],"me"],[14,"method",[0],"me"],[10,"shouldPrintArgumentsInMultilinesWhenGetsTooBig",[],"me"],[10,"shouldMarkVerifiedWhenMarkingVerifiedInOrder",[],"me"],[12,"isVerified",[],"me"],[12,"isVerifiedInOrder",[],"me"],[12,"markVerifiedInOrder",[],"me"],[10,"shouldTransformArgumentsToMatchers",[],"me"],[12,"argumentsToMatchers",[],"me"],[17,"assertEquals",["int","int"],"st me"],[2,"size",[],"me"],[17,"assertEquals",[15,15],"st me"],[2,"get",["int"],"me"],[15,"getClass",[],"me"],[10,"shouldKnowIfIsToString",[],"me"],[12,"isToString",[22],"st me"],[14,"arg",[15],"me"]),localVariableTable(["equal","shouldKnowIfIsEqualTo()-equal"],["nonEqual","shouldKnowIfIsEqualTo()-nonEqual"],["withNewStringInstance","shouldKnowIfIsEqualTo()-withNewStringInstance"],["equal","shouldEqualToNotConsiderSequenceNumber()-equal"],["map","shouldNotBeACitizenOfHashes()-map"],["e","shouldNotBeACitizenOfHashes()-e"],["m","shouldPrintNullIfArrayIsNull()-m"],["i","shouldTransformArgumentsToMatchers()-i"],["matchers","shouldTransformArgumentsToMatchers()-matchers"],["toString","shouldKnowIfIsToString()-toString"],["notToString","shouldKnowIfIsToString()-notToString"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.invocation;",nl,nl,ip," java.lang.reflect.",T(0),";",nl,ip," java.util.",T(1),";",nl,ip," java.util.",T(2),";",nl,ip," java.util.",T(3),";",nl,nl,ip," org.junit.",T(4),";",nl,ip," org.junit.",T(5),";",nl,ip," org.mockito.",T(6),";",nl,ip," org.mockito.internal.matchers.",T(7),";",nl,ip," org.mockito.internal.matchers.",T(8),";",nl,ip," org.mockitousage.",T(9),";",nl,nl,C(10,[],$("@",T(11),P(L("\"unchecked\"")),nl,pu,_,c,_,I("InvocationTest"),_,ex,_,T(6),_,B(nl,nl,w(4),F(pi,_,T(12),_,I("invocation"),";"),nl,nl,w(4),M(0,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("setup"),P(),_,ts,_,T(13),_,B(nl,w(8),G(10,"fi","invocation")," = ",n,_,N(1),P(),".",N(2),P(L("\" \"")),".",N(3),P(L("\"mock\"")),".",N(4),P(),";",nl,w(4)))),nl,nl,w(4),M(5,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldKnowIfIsEqualTo"),P(),_,B(nl,w(8),V(0,$(T(12),_,I("equal")," =",w(18),n,_,N(1),P(),".",N(2),P(L("\" \"")),".",N(3),P(L("\"mock\"")),".",N(4),P(),";")),nl,w(8),V(1,$(T(12),_,I("nonEqual")," =",w(15),n,_,N(1),P(),".",N(2),P(L("\"X\"")),".",N(3),P(L("\"mock\"")),".",N(4),P(),";")),nl,w(8),V(2,$(T(12),_,I("withNewStringInstance")," =  ",n,_,N(1),P(),".",N(2),P(n,_,N(6),P(L("\" \""))),".",N(3),P(L("\"mock\"")),".",N(4),P(),";")),nl,nl,w(8),N(7),P(G(10,"fi","invocation"),".",N(8),P(L("null"))),";",nl,w(8),N(7),P(G(10,"fi","invocation"),".",N(8),P(L("\"\""))),";",nl,w(8),N(9),P(G(10,"fi","invocation"),".",N(8),P(W(0))),";",nl,w(8),N(7),P(G(10,"fi","invocation"),".",N(8),P(W(1))),";",nl,w(8),N(9),P(G(10,"fi","invocation"),".",N(8),P(W(2))),";",nl,w(4)))),nl,w(4),nl,w(4),M(10,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldEqualToNotConsiderSequenceNumber"),P(),_,B(nl,w(8),V(3,$(T(12),_,I("equal")," = ",n,_,N(1),P(),".",N(2),P(L("\" \"")),".",N(3),P(L("\"mock\"")),".",N(11),P(L("2")),".",N(4),P(),";")),nl,w(8),nl,w(8),N(9),P(G(10,"fi","invocation"),".",N(8),P(W(3))),";",nl,w(8),N(9),P(G(10,"fi","invocation"),".",N(12),P()," != ",W(3),".",N(12),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(13,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldNotBeACitizenOfHashes"),P(),_,B(nl,w(8),V(4,$(T(3),_,I("map")," = ",n,_,N(14),P(),";")),nl,w(8),tr,_,B(nl,w(12),W(4),".",N(15),P(G(10,"fi","invocation"),", ",L("\"one\"")),";",nl,w(12),N(16),P(),";",nl,w(8)),_,ct,_,P(V(5,$(T(18),_,I("e")))),_,B(nl,w(12),N(17),P(L("\"hashCode() is not implemented\""),", ",W(5),".",N(18),P()),";",nl,w(8)),nl,w(4)))),nl,w(4),nl,w(4),M(19,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldPrintMethodName"),P(),_,B(nl,w(8),G(10,"fi","invocation")," = ",n,_,N(1),P(),".",N(4),P(),";",nl,w(8),N(17),P(L("\"iMethods.simpleMethod();\""),", ",G(10,"fi","invocation"),".",N(20),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(21,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldPrintMethodArgs"),P(),_,B(nl,w(8),G(10,"fi","invocation")," = ",n,_,N(1),P(),".",N(2),P(L("\"foo\"")),".",N(4),P(),";",nl,w(8),N(22),P(G(10,"fi","invocation"),".",N(20),P(),", ",N(23),P(L("\"simpleMethod(\\\"foo\\\");\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(24,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldPrintMethodIntegerArgAndString"),P(),_,B(nl,w(8),G(10,"fi","invocation")," = ",n,_,N(1),P(),".",N(2),P(L("\"foo\""),", ",L("1")),".",N(4),P(),";",nl,w(8),N(22),P(G(10,"fi","invocation"),".",N(20),P(),", ",N(23),P(L("\"simpleMethod(\\\"foo\\\", 1);\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(25,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldPrintNull"),P(),_,B(nl,w(8),G(10,"fi","invocation")," = ",n,_,N(1),P(),".",N(2),P(P(T(16)),_,L("null")),".",N(4),P(),";",nl,w(8),N(22),P(G(10,"fi","invocation"),".",N(20),P(),", ",N(23),P(L("\"simpleMethod(null);\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(26,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldPrintArray"),P(),_,B(nl,w(8),G(10,"fi","invocation")," = ",n,_,N(1),P(),".",N(27),P(L("\"oneArray\"")),".",N(2),P(n,_,j,"[] ",B(_,L("1"),", ",L("2"),", ",L("3"),_)),".",N(4),P(),";",nl,w(8),N(22),P(G(10,"fi","invocation"),".",N(20),P(),", ",N(23),P(L("\"oneArray([1, 2, 3]);\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(28,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldPrintNullIfArrayIsNull"),P(),_,ts,_,T(13),_,B(nl,w(8),V(6,$(T(0),_,I("m")," = ",T(9),".",c,".",N(29),P(L("\"oneArray\""),", ",T(15),"[].",c),";")),nl,w(8),G(10,"fi","invocation")," = ",n,_,N(1),P(),".",N(30),P(W(6)),".",N(2),P(P(T(15)),_,L("null")),".",N(4),P(),";",nl,w(8),N(22),P(G(10,"fi","invocation"),".",N(20),P(),", ",N(23),P(L("\"oneArray(null);\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(31,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldPrintArgumentsInMultilinesWhenGetsTooBig"),P(),_,B(nl,w(8),G(10,"fi","invocation")," = ",n,_,N(1),P(),".",N(2),P(L("\"veeeeery long string that makes it ugly in one line\""),", ",L("1")),".",N(4),P(),";",nl,w(8),N(22),P(G(10,"fi","invocation"),".",N(20),P(),", ",N(23),P(" ",nl,w(16),"\"simpleMethod(\" ",L("+",nl,w(16),"\"\\n\" +",nl,w(16),"\"",w(4),"\\\"veeeeery long string that makes it ugly in one line\\\",\" +",nl,w(16),"\"\\n\" +",nl,w(16),"\"",w(4),"1\" +",nl,w(16),"\"\\n\" +",nl,w(16),"\");\""))),";",nl,w(4)))),nl,w(4),nl,w(4),M(32,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldMarkVerifiedWhenMarkingVerifiedInOrder"),P(),_,ts,_,T(13),_,B(nl,w(8),N(7),P(G(10,"fi","invocation"),".",N(33),P()),";",nl,w(8),N(7),P(G(10,"fi","invocation"),".",N(34),P()),";",nl,w(8),nl,w(8),G(10,"fi","invocation"),".",N(35),P(),";",nl,w(8),nl,w(8),N(9),P(G(10,"fi","invocation"),".",N(33),P()),";",nl,w(8),N(9),P(G(10,"fi","invocation"),".",N(34),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(36,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldTransformArgumentsToMatchers"),P(),_,ts,_,T(13),_,B(nl,w(8),V(7,$(T(12),_,I("i")," = ",n,_,N(1),P(),".",N(2),P(L("\"foo\""),", ",n,_,T(16),"[] ",B(L("\"bar\""))),".",N(4),P(),";")),nl,w(8),V(8,$(T(2),_,I("matchers")," = ",W(7),".",N(37),P(),";")),nl,nl,w(8),N(38),P(L("2"),", ",W(8),".",N(39),P()),";",nl,w(8),N(40),P(T(8),".",c,", ",W(8),".",N(41),P(L("0")),".",N(42),P()),";",nl,w(8),N(40),P(T(7),".",c,", ",W(8),".",N(41),P(L("1")),".",N(42),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(43,[],[],$("@",T(5),nl,w(4),pu,_,v,_,I("shouldKnowIfIsToString"),P(),_,ts,_,T(13),_,B(nl,w(8),V(9,$(T(12),_,I("toString")," = ",n,_,N(1),P(),".",N(27),P(L("\"toString\"")),".",N(4),P(),";")),nl,w(8),N(9),P(T(12),".",N(44),P(W(9))),";",nl,w(8),nl,w(8),V(10,$(T(12),_,I("notToString")," = ",n,_,N(1),P(),".",N(27),P(L("\"toString\"")),".",N(45),P(L("\"foo\"")),".",N(4),P(),";")),nl,w(8),N(7),P(T(12),".",N(44),P(W(10))),";",nl,w(4)))),nl))));}});