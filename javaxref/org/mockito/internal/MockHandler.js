defineStructure(
"MockHandler",function(factory){with(factory) { typeTable(["java.lang.reflect.Method","cl"],["java.util.Arrays","cl"],["java.util.List","it"],["net.sf.cglib.proxy.MethodProxy","cl"],["org.mockito.internal.configuration.Configuration","cl"],["org.mockito.internal.creation.ClassNameFinder","cl"],["org.mockito.internal.creation.MockAwareInterceptor","it"],["org.mockito.internal.invocation.AllInvocationsFinder","cl"],["org.mockito.internal.invocation.Invocation","cl"],["org.mockito.internal.invocation.InvocationMatcher","cl"],["org.mockito.internal.invocation.MatchersBinder","cl"],["org.mockito.internal.progress.MockingProgress","it"],["org.mockito.internal.progress.OngoingStubbing","it"],["org.mockito.internal.progress.VerificationModeImpl","cl"],["org.mockito.internal.stubbing.StubbedMethodSelector","it"],["org.mockito.internal.stubbing.Stubber","cl"],["org.mockito.internal.stubbing.VoidMethodStubbable","it"],["org.mockito.internal.verification.MissingInvocationInOrderVerifier","cl"],["org.mockito.internal.verification.MissingInvocationVerifier","cl"],["org.mockito.internal.verification.NoMoreInvocationsVerifier","cl"],["org.mockito.internal.verification.NumberOfInvocationsInOrderVerifier","cl"],["org.mockito.internal.verification.NumberOfInvocationsVerifier","cl"],["org.mockito.internal.verification.Verifier","it"],["org.mockito.internal.verification.VerifyingRecorder","cl"],["org.mockito.internal.MockHandler","cl"],["java.lang.String","cl"],["java.lang.Object","cl"],["java.lang.Throwable","cl"],["org.mockito.configuration.ReturnValues","it"],["org.mockito.invocation.InvocationOnMock","it"],["org.mockito.internal.MockHandler$OngoingStubbingImpl","cl"],["org.mockito.internal.MockHandler$VoidMethodStubbableImpl","cl"],["org.mockito.internal.MockHandler$VoidMethodStubbableImpl$0$0","cl"]),methodTable([24,"MockHandler",[25,11,10],"co"],[15,"Stubber",[11],"co"],[24,"createRecorder",[],"me"],[24,"intercept",[26,0,"java.lang.Object[]",3],"me"],[6,"intercept",[26,0,"java.lang.Object[]",3],"me"],[15,"hasThrowableForVoidMethod",[],"me"],[8,"Invocation",[26,0,"java.lang.Object[]","int"],"co"],[11,"nextSequenceNumber",[],"me"],[10,"bindMatchers",[8],"me"],[15,"addVoidMethodForThrowable",[9],"me"],[11,"pullVerificationMode",[],"me"],[11,"validateState",[],"me"],[23,"verify",[9,13],"me"],[4,"instance",[],"st me"],[4,"getReturnValues",[],"me"],[28,"valueFor",[29],"me"],[9,"getInvocation",[],"me"],[15,"setInvocationForPotentialStubbing",[9],"me"],[23,"recordInvocation",[8],"me"],[11,"reportOngoingStubbing",[12],"me"],[30,"OngoingStubbingImpl",[],"co"],[15,"resultFor",[8],"me"],[24,"verifyNoMoreInteractions",[],"me"],[23,"verify",[13],"me"],[13,"noMoreInteractions",[],"st me"],[24,"voidMethodStubbable",[],"me"],[31,"VoidMethodStubbableImpl",[],"co"],[24,"setMock",[26],"me"],[6,"setMock",[26],"me"],[24,"getRegisteredInvocations",[],"me"],[23,"getRegisteredInvocations",[],"me"],[24,"getMockName",[],"me"],[24,"toInstanceName",[25],"me"],[5,"classNameForMock",[26],"st me"],[25,"substring",["int","int"],"me"],[25,"toLowerCase",[],"me"],[25,"substring",["int"],"me"],[1,"asList",["java.lang.Object[]"],"st me"],[17,"MissingInvocationInOrderVerifier",[],"co"],[20,"NumberOfInvocationsInOrderVerifier",[],"co"],[18,"MissingInvocationVerifier",[],"co"],[21,"NumberOfInvocationsVerifier",[],"co"],[19,"NoMoreInvocationsVerifier",[],"co"],[23,"VerifyingRecorder",[7,2],"co"],[7,"AllInvocationsFinder",[],"co"],[31,"toThrow",[27],"me"],[16,"toThrow",[27],"me"],[15,"addThrowableForVoidMethod",[27],"me"],[32,"on",[],"me"],[14,"on",[],"me"],[30,"toReturn",[26],"me"],[12,"toReturn",[26],"me"],[23,"eraseLastInvocation",[],"me"],[15,"addReturnValue",[26],"me"],[30,"toThrow",[27],"me"],[12,"toThrow",[27],"me"],[15,"addThrowable",[27],"me"]),localVariableTable(["mockName","<init>(java.lang.String,org.mockito.internal.progress.MockingProgress,org.mockito.internal.invocation.MatchersBinder)-mockName"],["mockingProgress","<init>(java.lang.String,org.mockito.internal.progress.MockingProgress,org.mockito.internal.invocation.MatchersBinder)-mockingProgress"],["matchersBinder","<init>(java.lang.String,org.mockito.internal.progress.MockingProgress,org.mockito.internal.invocation.MatchersBinder)-matchersBinder"],["proxy","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-proxy"],["method","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-method"],["args","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-args"],["methodProxy","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-methodProxy"],["invocation","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-invocation"],["invocationMatcher","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-invocationMatcher"],["verificationMode","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-verificationMode"],["invocation","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-invocation2"],["invocationMatcher","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-invocationMatcher2"],["mock","setMock(java.lang.Object)-mock"],["className","toInstanceName(java.lang.String)-className"],["verifiers","createRecorder()-verifiers"],["throwable","~VoidMethodStubbableImpl-toThrow(java.lang.Throwable)-throwable"],["value","~OngoingStubbingImpl-toReturn(java.lang.Object)-value"],["throwable","~OngoingStubbingImpl-toThrow(java.lang.Throwable)-throwable"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal;",nl,nl,ip," java.lang.reflect.",T(0),";",nl,ip," java.util.",T(1),";",nl,ip," java.util.",T(2),";",nl,nl,ip," net.sf.cglib.proxy.",T(3),";",nl,nl,ip," org.mockito.internal.configuration.",T(4),";",nl,ip," org.mockito.internal.creation.",T(5),";",nl,ip," org.mockito.internal.creation.",T(6),";",nl,ip," org.mockito.internal.invocation.",T(7),";",nl,ip," org.mockito.internal.invocation.",T(8),";",nl,ip," org.mockito.internal.invocation.",T(9),";",nl,ip," org.mockito.internal.invocation.",T(10),";",nl,ip," org.mockito.internal.progress.",T(11),";",nl,ip," org.mockito.internal.progress.",T(12),";",nl,ip," org.mockito.internal.progress.",T(13),";",nl,ip," org.mockito.internal.stubbing.",T(14),";",nl,ip," org.mockito.internal.stubbing.",T(15),";",nl,ip," org.mockito.internal.stubbing.",T(16),";",nl,ip," org.mockito.internal.verification.",T(17),";",nl,ip," org.mockito.internal.verification.",T(18),";",nl,ip," org.mockito.internal.verification.",T(19),";",nl,ip," org.mockito.internal.verification.",T(20),";",nl,ip," org.mockito.internal.verification.",T(21),";",nl,ip," org.mockito.internal.verification.",T(22),";",nl,ip," org.mockito.internal.verification.",T(23),";",nl,nl,O("/**",nl," * Invocation handler set on mock objects.",nl," *",nl," * @param &lt;T> type of mock object to handle",nl," */"),nl,C(24,[],$(pu,_,c,_,I("MockHandler"),"&lt;T> ",im,_,T(6),"&lt;T> ",B(nl,nl,w(4),F(pi,_,f,_,T(23),_,I("verifyingRecorder"),";"),nl,w(4),F(pi,_,f,_,T(15),_,I("stubber"),";"),nl,w(4),F(pi,_,f,_,T(10),_,I("matchersBinder"),";"),nl,w(4),F(pi,_,f,_,T(11),_,I("mockingProgress"),";"),nl,w(4),F(pi,_,f,_,T(25),_,I("mockName"),";"),nl,w(4),nl,w(4),F(pi," T ",I("mock"),";"),nl,w(4),nl,w(4),M(0,[],[],$(pu," MockHandler",P(V(0,$(T(25),_,I("mockName"))),", ",V(1,$(T(11),_,I("mockingProgress"))),", ",V(2,$(T(10),_,I("matchersBinder")))),_,B(nl,w(8),t,".",G(24,"fi","mockName")," = ",W(0),";",nl,w(8),t,".",G(24,"fi","mockingProgress")," = ",W(1),";",nl,w(8),t,".",G(24,"fi","matchersBinder")," = ",W(2),";",nl,w(8),G(24,"fi","stubber")," = ",n,_,N(1),P(W(1)),";",nl,w(8),nl,w(8),G(24,"fi","verifyingRecorder")," = ",N(2),P(),"; ",nl,w(4)))),nl,nl,w(4),M(3,[4],[],$(pu,_,T(26),_,I("intercept"),P(V(3,$(T(26),_,I("proxy"))),", ",V(4,$(T(0),_,I("method"))),", ",V(5,$(T(26),"[] ",I("args"))),", ",V(6,$(T(3),_,I("methodProxy")))),_,ts,_,T(27),_,B(nl,w(8),i,_,P(G(24,"fi","stubber"),".",N(5),P()),_,B(nl,w(12),V(7,$(T(8),_,I("invocation")," = ",n,_,N(6),P(W(3),", ",W(4),", ",W(5),", ",G(24,"fi","mockingProgress"),".",N(7),P()),";")),nl,w(12),V(8,$(T(9),_,I("invocationMatcher")," = ",G(24,"fi","matchersBinder"),".",N(8),P(W(7)),";")),nl,w(12),G(24,"fi","stubber"),".",N(9),P(W(8)),";",nl,w(12),r,_,L("null"),";",nl,w(8)),nl,w(8),nl,w(8),V(9,$(T(13),_,I("verificationMode")," = ",G(24,"fi","mockingProgress"),".",N(10),P(),";")),nl,w(8),G(24,"fi","mockingProgress"),".",N(11),P(),";",nl,w(8),nl,w(8),V(10,$(T(8),_,I("invocation")," = ",n,_,N(6),P(W(3),", ",W(4),", ",W(5),", ",G(24,"fi","mockingProgress"),".",N(7),P()),";")),nl,w(8),V(11,$(T(9),_,I("invocationMatcher")," = ",G(24,"fi","matchersBinder"),".",N(8),P(W(10)),";")),nl,w(8),nl,w(8),i,_,P(W(9)," != ",L("null")),_,B(nl,w(12),G(24,"fi","verifyingRecorder"),".",N(12),P(W(11),", ",W(9)),";",nl,w(12),r,_,T(4),".",N(13),P(),".",N(14),P(),".",N(15),P(W(11),".",N(16),P()),";",nl,w(8)),nl,w(8),nl,w(8),G(24,"fi","stubber"),".",N(17),P(W(11)),";",nl,w(8),G(24,"fi","verifyingRecorder"),".",N(18),P(W(11),".",N(16),P()),";",nl,nl,w(8),G(24,"fi","mockingProgress"),".",N(19),P(n,_,N(20),P()),";",nl,w(8),nl,w(8),r,_,G(24,"fi","stubber"),".",N(21),P(W(11),".",N(16),P()),";",nl,w(4)))),nl,nl,w(4),M(22,[],[],$(pu,_,v,_,I("verifyNoMoreInteractions"),P(),_,B(nl,w(8),G(24,"fi","verifyingRecorder"),".",N(23),P(T(13),".",N(24),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(25,[],[],$(pu,_,T(16),"&lt;T> ",I("voidMethodStubbable"),P(),_,B(nl,w(8),r,_,n,_,N(26),P(),";",nl,w(4)))),nl,w(4),nl,w(4),M(27,[28],[],$(pu,_,v,_,I("setMock"),P(V(12,$("T ",I("mock")))),_,B(nl,w(8),t,".",G(24,"fi","mock")," = ",W(12),";",nl,w(4)))),nl,nl,w(4),M(29,[],[],$(pu,_,T(2),"&lt;",T(8),"> ",I("getRegisteredInvocations"),P(),_,B(nl,w(8),r,_,G(24,"fi","verifyingRecorder"),".",N(30),P(),";",nl,w(4)))),nl,w(4),nl,w(4),M(31,[],[],$(pu,_,T(25),_,I("getMockName"),P(),_,B(nl,w(8),i,_,P(G(24,"fi","mockName")," != ",L("null")),_,B(nl,w(12),r,_,G(24,"fi","mockName"),";",nl,w(8)),_,e,_,B(nl,w(12),r,_,N(32),P(T(5),".",N(33),P(G(24,"fi","mock"))),";",nl,w(8)),nl,w(4)))),nl,w(4),nl,w(4),O("//lower case first letter"),nl,w(4),M(32,[],[],$(pi,_,T(25),_,I("toInstanceName"),P(V(13,$(T(25),_,I("className")))),_,B(nl,w(8),r,_,W(13),".",N(34),P(L("0"),", ",L("1")),".",N(35),P()," + ",W(13),".",N(36),P(L("1")),";",nl,w(4)))),nl,nl,w(4),M(2,[],[],$(pi,_,T(23),_,I("createRecorder"),P(),_,B(nl,w(8),V(14,$(T(2),"&lt;",T(22),"> ",I("verifiers")," = ",T(1),".",N(37),P(nl,w(16),n,_,N(38),P(),",",nl,w(16),n,_,N(39),P(),",",nl,w(16),n,_,N(40),P(),",",nl,w(16),n,_,N(41),P(),",",nl,w(16),n,_,N(42),P()),";")),nl,w(8),r,_,n,_,N(43),P(n,_,N(44),P(),", ",W(14)),";",nl,w(4)))),nl,w(4),nl,w(4),C(31,[],$(pi,_,f,_,c,_,I("VoidMethodStubbableImpl"),_,im,_,T(16),"&lt;T> ",B(nl,w(8),M(45,[46],[],$(pu,_,T(14),"&lt;T> ",I("toThrow"),P(V(15,$(T(27),_,I("throwable")))),_,B(nl,w(12),G(24,"fi","stubber"),".",N(47),P(W(15)),";",nl,w(12),r,_,n,_,T(14),"&lt;T>",P(),_,B(C(32,[],$(nl,w(16),M(48,[49],[],$(pu," T ",I("on"),P(),_,B(nl,w(20),r,_,G(24,"fi","mock"),";",nl,w(16)))),nl,w(12)))),";",nl,w(8)))),nl,w(4)))),nl,nl,w(4),C(30,[],$(pi,_,c,_,I("OngoingStubbingImpl"),_,im,_,T(12),"&lt;T> ",B(nl,w(8),M(50,[51],[],$(pu,_,v,_,I("toReturn"),P(V(16,$(T(26),_,I("value")))),_,B(nl,w(12),G(24,"fi","verifyingRecorder"),".",N(52),P(),";",nl,w(12),G(24,"fi","stubber"),".",N(53),P(W(16)),";",nl,w(8)))),nl,nl,w(8),M(54,[55],[],$(pu,_,v,_,I("toThrow"),P(V(17,$(T(27),_,I("throwable")))),_,B(nl,w(12),G(24,"fi","verifyingRecorder"),".",N(52),P(),";",nl,w(12),G(24,"fi","stubber"),".",N(56),P(W(17)),";",nl,w(8)))),nl,w(4)))),nl))));}});