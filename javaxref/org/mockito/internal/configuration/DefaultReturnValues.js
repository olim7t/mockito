defineStructure(
"DefaultReturnValues",function(factory){with(factory) { typeTable(["java.util.ArrayList","cl"],["java.util.Collection","it"],["java.util.HashMap","cl"],["java.util.HashSet","cl"],["java.util.LinkedHashMap","cl"],["java.util.LinkedHashSet","cl"],["java.util.LinkedList","cl"],["java.util.List","it"],["java.util.Map","it"],["java.util.Set","it"],["java.util.SortedMap","it"],["java.util.SortedSet","it"],["java.util.TreeMap","cl"],["java.util.TreeSet","cl"],["org.mockito.configuration.ReturnValues","it"],["org.mockito.internal.creation.ClassNameFinder","cl"],["org.mockito.internal.invocation.Invocation","cl"],["org.mockito.invocation.InvocationOnMock","it"],["org.mockito.internal.configuration.DefaultReturnValues","cl"],["java.lang.Object","cl"],["java.lang.String","cl"],["java.lang.Class","cl"],["java.lang.reflect.Method","cl"],["java.lang.Boolean","cl"],["java.lang.Character","cl"],["java.lang.Byte","cl"],["java.lang.Short","cl"],["java.lang.Integer","cl"],["java.lang.Long","cl"],["java.lang.Float","cl"],["java.lang.Double","cl"]),methodTable([18,"valueFor",[17],"me"],[14,"valueFor",[17],"me"],[16,"isToString",[17],"st me"],[17,"getMock",[],"me"],[15,"classNameForMock",[19],"st me"],[19,"hashCode",[],"me"],[17,"getMethod",[],"me"],[22,"getReturnType",[],"me"],[18,"returnValueFor",[21],"me"],[21,"isPrimitive",[],"me"],[18,"primitiveOf",[21],"me"],[18,"isPrimitiveWrapper",[21],"me"],[18,"primitiveWrapperOf",[21],"me"],[6,"LinkedList",[],"co"],[3,"HashSet",[],"co"],[13,"TreeSet",[],"co"],[5,"LinkedHashSet",[],"co"],[0,"ArrayList",[],"co"],[2,"HashMap",[],"co"],[12,"TreeMap",[],"co"],[4,"LinkedHashMap",[],"co"],[8,"containsKey",[19],"me"],[8,"get",[19],"me"],[8,"put",[19,19],"me"],[24,"Character",["char"],"co"],[25,"Byte",["byte"],"co"],[26,"Short",["short"],"co"],[27,"Integer",["int"],"co"],[28,"Long",["long"],"co"],[29,"Float",["float"],"co"],[30,"Double",["double"],"co"]),localVariableTable(["invocation","valueFor(org.mockito.invocation.InvocationOnMock)-invocation"],["mock","valueFor(org.mockito.invocation.InvocationOnMock)-mock"],["mockDescription","valueFor(org.mockito.invocation.InvocationOnMock)-mockDescription"],["returnType","valueFor(org.mockito.invocation.InvocationOnMock)-returnType"],["type","returnValueFor(java.lang.Class)-type"],["type","primitiveOf(java.lang.Class)-type"],["type","isPrimitiveWrapper(java.lang.Class)-type"],["type","primitiveWrapperOf(java.lang.Class)-type"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.configuration;",nl,nl,ip," java.util.",T(0),";",nl,ip," java.util.",T(1),";",nl,ip," java.util.",T(2),";",nl,ip," java.util.",T(3),";",nl,ip," java.util.",T(4),";",nl,ip," java.util.",T(5),";",nl,ip," java.util.",T(6),";",nl,ip," java.util.",T(7),";",nl,ip," java.util.",T(8),";",nl,ip," java.util.",T(9),";",nl,ip," java.util.",T(10),";",nl,ip," java.util.",T(11),";",nl,ip," java.util.",T(12),";",nl,ip," java.util.",T(13),";",nl,nl,ip," org.mockito.configuration.",T(14),";",nl,ip," org.mockito.internal.creation.",T(15),";",nl,ip," org.mockito.internal.invocation.",T(16),";",nl,ip," org.mockito.invocation.",T(17),";",nl,nl,O("/**",nl," * Used by default by every Mockito mock.",nl," * &lt;ul>",nl," * &lt;li>",nl," *  Returns appropriate primitive for primitive-returning methods",nl," * &lt;/li>",nl," * &lt;li>",nl," *  Returns consistent values for primitive wrapper classes (e.g. int-returning method retuns 0 &lt;b>and&lt;/b> Integer-returning method returns 0, too)",nl," * &lt;/li>",nl," * &lt;li>",nl," *  Returns empty collection for collection-returning methods (works for most commonly used collection types)",nl," * &lt;/li>",nl," * &lt;li>",nl," *  Returns description of mock for toString() method",nl," * &lt;/li>",nl," * &lt;li>",nl," *  Returns null for everything else",nl," * &lt;/li>",nl," * &lt;/ul>",nl," */"),nl,C(18,[],$(pu,_,c,_,I("DefaultReturnValues"),_,im,_,T(14),_,B(nl,w(4),nl,w(4),O("/* (non-Javadoc)",nl,w(5),"* @see org.mockito.configuration.ReturnValues#valueFor(org.mockito.invocation.InvocationOnMock)",nl,w(5),"*/"),nl,w(4),M(0,[1],[],$(pu,_,T(19),_,I("valueFor"),P(V(0,$(T(17),_,I("invocation")))),_,B(nl,w(8),i,_,P(T(16),".",N(2),P(W(0))),_,B(nl,w(12),V(1,$(T(19),_,I("mock")," = ",W(0),".",N(3),P(),";")),nl,w(12),V(2,$(T(20),_,I("mockDescription")," = ",L("\"Mock for \"")," + ",T(15),".",N(4),P(W(1))," + ",L("\", hashCode: \"")," + ",W(1),".",N(5),P(),";")),nl,w(12),r,_,W(2),";",nl,w(8)),nl,w(8),nl,w(8),V(3,$(T(21),"&lt;?> ",I("returnType")," = ",W(0),".",N(6),P(),".",N(7),P(),";")),nl,w(8),r,_,N(8),P(W(3)),";",nl,w(4)))),nl,w(4),nl,w(4),M(8,[],[],$(T(19),_,I("returnValueFor"),P(V(4,$(T(21),"&lt;?> ",I("type")))),_,B(nl,w(8),i,_,P(W(4),".",N(9),P()),_,B(nl,w(12),r,_,N(10),P(W(4)),";",nl,w(8)),_,e,_,i,_,P(N(11),P(W(4))),_,B(nl,w(12),r,_,N(12),P(W(4)),";",nl,w(8),O("//new instances are used instead of Collections.emptyList(), etc."),nl,w(8),O("//to avoid UnsupportedOperationException if code under test modifies returned collection"),nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(1),".",c),_,B(nl,w(12),r,_,n,_,N(13),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(9),".",c),_,B(nl,w(12),r,_,n,_,N(14),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(3),".",c),_,B(nl,w(12),r,_,n,_,N(14),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(11),".",c),_,B(nl,w(12),r,_,n,_,N(15),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(13),".",c),_,B(nl,w(12),r,_,n,_,N(15),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(5),".",c),_,B(nl,w(12),r,_,n,_,N(16),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(7),".",c),_,B(nl,w(12),r,_,n,_,N(13),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(6),".",c),_,B(nl,w(12),r,_,n,_,N(13),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(0),".",c),_,B(nl,w(12),r,_,n,_,N(17),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(8),".",c),_,B(nl,w(12),r,_,n,_,N(18),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(2),".",c),_,B(nl,w(12),r,_,n,_,N(18),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(10),".",c),_,B(nl,w(12),r,_,n,_,N(19),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(12),".",c),_,B(nl,w(12),r,_,n,_,N(19),P(),";",nl,w(8)),_,e,_,i,_,P(W(4)," == ",T(4),".",c),_,B(nl,w(12),r,_,n,_,N(20),P(),";",nl,w(8)),w(7),nl,w(8),O("//Let's not care about the rest of collections."),nl,w(8),r,_,L("null"),";",nl,w(4)))),nl,nl,w(4),M(10,[],[],$(pi,_,T(19),_,I("primitiveOf"),P(V(5,$(T(21),"&lt;?> ",I("type")))),_,B(nl,w(8),i,_,P(W(5)," == ",T(23),".",G(23,"st fi","TYPE")),_,B(nl,w(12),r,_,L("false"),";",nl,w(8)),_,e,_,i,_,P(W(5)," == ",T(24),".",G(24,"st fi","TYPE")),_,B(nl,w(12),r,_,P(ch),_,L("0"),";",nl,w(8)),_,e,_,B(nl,w(12),r,_,L("0"),";",nl,w(8))," ",nl,w(4)))),nl,w(4),nl,w(4),M(11,[],[],$(pi,_,b,_,I("isPrimitiveWrapper"),P(V(6,$(T(21),"&lt;?> ",I("type")))),_,B(nl,w(8),r,_,G(18,"st fi","wrapperReturnValues"),".",N(21),P(W(6)),";",nl,w(4)))),nl,w(4),nl,w(4),M(12,[],[],$(pi,_,T(19),_,I("primitiveWrapperOf"),P(V(7,$(T(21),"&lt;?> ",I("type")))),_,B(nl,w(8),r,_,G(18,"st fi","wrapperReturnValues"),".",N(22),P(W(7)),";",nl,w(4)))),nl,w(4),nl,w(4),F(pi,_,s,_,T(8),"&lt;",T(21),"&lt;?>, ",T(19),"> ",I("wrapperReturnValues")," = ",n,_,N(18),P(),";"),nl,w(4),nl,w(4),s,_,B(nl,w(8),G(18,"st fi","wrapperReturnValues"),".",N(23),P(T(23),".",c,", ",T(23),".",G(23,"st fi","FALSE")),";",nl,w(8),G(18,"st fi","wrapperReturnValues"),".",N(23),P(T(24),".",c,", ",n,_,N(24),P(P(ch),_,L("0"))),";",nl,w(8),G(18,"st fi","wrapperReturnValues"),".",N(23),P(T(25),".",c,", ",n,_,N(25),P(P(by),_,L("0"))),";",nl,w(8),G(18,"st fi","wrapperReturnValues"),".",N(23),P(T(26),".",c,", ",n,_,N(26),P(P(sh),_,L("0"))),";",nl,w(8),G(18,"st fi","wrapperReturnValues"),".",N(23),P(T(27),".",c,", ",n,_,N(27),P(L("0"))),";",nl,w(8),G(18,"st fi","wrapperReturnValues"),".",N(23),P(T(28),".",c,", ",n,_,N(28),P(L("0"))),";",nl,w(8),G(18,"st fi","wrapperReturnValues"),".",N(23),P(T(29),".",c,", ",n,_,N(29),P(L("0"))),";",nl,w(8),G(18,"st fi","wrapperReturnValues"),".",N(23),P(T(30),".",c,", ",n,_,N(30),P(L("0"))),";",nl,w(4)),nl))));}});