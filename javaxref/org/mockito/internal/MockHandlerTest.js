defineStructure(
"MockHandlerTest",function(factory){with(factory) { typeTable(["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.exceptions.misusing.InvalidUseOfMatchersException","cl"],["org.mockito.internal.invocation.Invocation","cl"],["org.mockito.internal.invocation.InvocationMatcher","cl"],["org.mockito.internal.invocation.MatchersBinder","cl"],["org.mockito.internal.progress.MockingProgressImpl","cl"],["org.mockito.internal.progress.VerificationModeImpl","cl"],["org.mockito.internal.MockHandlerTest","cl"],["java.lang.SuppressWarnings","an"],["java.lang.Throwable","cl"],["org.mockito.internal.progress.VerificationMode","it"],["org.mockito.internal.MockHandler","cl"],["java.lang.String","cl"],["org.mockito.internal.progress.MockingProgress","it"],["org.mockito.internal.MockHandlerTest$ExceptionThrowingBinder","cl"],["java.lang.Object","cl"],["java.lang.reflect.Method","cl"],["net.sf.cglib.proxy.MethodProxy","cl"],["java.lang.Class","cl"],["junit.framework.Assert","cl"],["java.lang.Override","an"]),methodTable([8,"shouldRemoveVerificationModeEvenWhenInvalidMatchers",[],"me"],[6,"MockingProgressImpl",[],"co"],[6,"verificationStarted",[11],"me"],[7,"atLeastOnce",[],"st me"],[12,"MockHandler",[13,14,5],"co"],[15,"ExceptionThrowingBinder",[],"co"],[12,"intercept",[16,17,"java.lang.Object[]",18],"me"],[19,"getDeclaredMethod",[13,"java.lang.Class[]"],"me"],[20,"fail",[],"st me"],[20,"assertNull",[16],"st me"],[6,"pullVerificationMode",[],"me"],[15,"bindMatchers",[3],"me"],[5,"bindMatchers",[3],"me"],[2,"InvalidUseOfMatchersException",[13],"co"]),localVariableTable(["state","shouldRemoveVerificationModeEvenWhenInvalidMatchers()-state"],["handler","shouldRemoveVerificationModeEvenWhenInvalidMatchers()-handler"],["e","shouldRemoveVerificationModeEvenWhenInvalidMatchers()-e"],["invocation","~ExceptionThrowingBinder-bindMatchers(org.mockito.internal.invocation.Invocation)-invocation"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal;",nl,nl,ip," org.junit.",T(0),";",nl,ip," org.mockito.",T(1),";",nl,ip," org.mockito.exceptions.misusing.",T(2),";",nl,ip," org.mockito.internal.invocation.",T(3),";",nl,ip," org.mockito.internal.invocation.",T(4),";",nl,ip," org.mockito.internal.invocation.",T(5),";",nl,ip," org.mockito.internal.progress.",T(6),";",nl,ip," org.mockito.internal.progress.",T(7),";",nl,nl,C(8,[],$("@",T(9),P(L("\"unchecked\"")),nl,pu,_,c,_,I("MockHandlerTest"),_,ex,_,T(1),_,B(nl,w(4),nl,w(4),M(0,[],[],$("@",T(0),nl,w(4),pu,_,v,_,I("shouldRemoveVerificationModeEvenWhenInvalidMatchers"),P(),_,ts,_,T(10),_,B(nl,w(8),V(0,$(T(6),_,I("state")," = ",n,_,N(1),P(),";")),nl,w(8),W(0),".",N(2),P(T(7),".",N(3),P()),";",nl,w(8),V(1,$(T(12),_,I("handler")," = ",n,_,N(4),P(L("null"),", ",W(0),", ",n,_,N(5),P()),";")),nl,w(8),nl,w(8),tr,_,B(nl,w(12),W(1),".",N(6),P(L("null"),", ",T(13),".",c,".",N(7),P(L("\"toString\"")),", ",n,_,T(16),"[]",B(),", ",L("null")),";",nl,w(12),N(8),P(),";",nl,w(8)),_,ct,_,P(V(2,$(T(2),_,I("e")))),_,B(),nl,w(8),nl,w(8),N(9),P(W(0),".",N(10),P()),";",nl,w(4)))),nl,w(4),nl,w(4),C(15,[],$(pi,_,c,_,I("ExceptionThrowingBinder"),_,ex,_,T(5),_,B(nl,w(8),M(11,[12],[],$("@",T(21),nl,w(8),pu,_,T(4),_,I("bindMatchers"),P(V(3,$(T(3),_,I("invocation")))),_,B(nl,w(12),tw,_,n,_,N(13),P(L("\"\"")),";",nl,w(8)))),nl,w(4)))),nl))));}});