defineStructure(
"MockAwareInterceptor",function(factory){with(factory) { typeTable(["java.lang.reflect.Method","cl"],["net.sf.cglib.proxy.MethodInterceptor","it"],["net.sf.cglib.proxy.MethodProxy","cl"],["org.mockito.internal.creation.MockAwareInterceptor","it"],["org.mockito.internal.MockHandler","cl"],["org.mockito.internal.creation.MethodInterceptorFilter","cl"],["java.lang.Object","cl"],["java.lang.Throwable","cl"]),methodTable([3,"intercept",[6,0,"java.lang.Object[]",2],"me"],[1,"intercept",[6,0,"java.lang.Object[]",2],"me"],[5,"intercept",[6,0,"java.lang.Object[]",2],"me"],[3,"setMock",[6],"me"],[5,"setMock",[6],"me"]),localVariableTable(["proxy","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-proxy"],["method","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-method"],["args","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-args"],["methodProxy","intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)-methodProxy"],["mock","setMock(java.lang.Object)-mock"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.creation;",nl,nl,ip," java.lang.reflect.",T(0),";",nl,nl,ip," net.sf.cglib.proxy.",T(1),";",nl,ip," net.sf.cglib.proxy.",T(2),";",nl,nl,C(3,[4,5],$(pu,_,it,_,I("MockAwareInterceptor"),"&lt;T> ",ex,_,T(1),_,B(nl,"  ",nl,w(4),M(0,[1],[2],$(T(6),_,I("intercept"),P(V(0,$(T(6),_,I("proxy"))),", ",V(1,$(T(0),_,I("method"))),", ",V(2,$(T(6),"[] ",I("args"))),", ",V(3,$(T(2),_,I("methodProxy")))),_,ts,_,T(7),";")),nl,w(4),nl,w(4),M(3,[],[4],$(v,_,I("setMock"),P(V(4,$("T ",I("mock")))),";")),nl,w(4),nl))),nl);}});