defineStructure(
"StubberTest",function(factory){with(factory) { typeTable(["java.nio.charset.CharacterCodingException","cl"],["org.junit.Before","an"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.exceptions.base.MockitoException","cl"],["org.mockito.internal.invocation.Invocation","cl"],["org.mockito.internal.invocation.InvocationBuilder","cl"],["org.mockito.internal.invocation.InvocationMatcher","cl"],["org.mockito.internal.progress.MockingProgressImpl","cl"],["org.mockito.internal.stubbing.StubberTest","cl"],["org.mockito.internal.stubbing.Stubber","cl"],["org.mockito.internal.progress.MockingProgress","it"],["java.lang.Exception","cl"],["java.lang.Throwable","cl"],["junit.framework.Assert","cl"],["java.lang.Object","cl"],["org.mockito.internal.stubbing.StubberTest$MyException","cl"],["java.lang.String","cl"],["java.lang.SuppressWarnings","an"],["java.lang.RuntimeException","cl"]),methodTable([9,"setup",[],"me"],[8,"MockingProgressImpl",[],"co"],[10,"Stubber",[11],"co"],[10,"setInvocationForPotentialStubbing",[7],"me"],[6,"InvocationBuilder",[],"co"],[6,"toInvocationMatcher",[],"me"],[6,"simpleMethod",[],"me"],[6,"toInvocation",[],"me"],[9,"shouldFinishStubbingBeforeValidatingThrowable",[],"me"],[8,"stubbingStarted",[],"me"],[10,"addThrowable",[13],"me"],[12,"Exception",[],"co"],[14,"fail",[],"st me"],[8,"validateState",[],"me"],[9,"shouldFinishStubbingOnAddingReturnValue",[],"me"],[10,"addReturnValue",[15],"me"],[9,"shouldGetResultsForMethods",[],"me"],[7,"InvocationMatcher",[5],"co"],[6,"differentMethod",[],"me"],[16,"MyException",[],"co"],[14,"assertEquals",[15,15],"st me"],[10,"resultFor",[5],"me"],[9,"shouldGetEmptyResultIfMethodsDontMatch",[],"me"],[9,"shouldAddThrowableForVoidMethod",[],"me"],[10,"addThrowableForVoidMethod",[13],"me"],[10,"addVoidMethodForThrowable",[7],"me"],[9,"shouldValidateThrowableForVoidMethod",[],"me"],[9,"shouldValidateNullThrowable",[],"me"],[9,"shouldLetSettingProperCheckedException",[],"me"],[6,"method",[17],"me"],[0,"CharacterCodingException",[],"co"]),localVariableTable(["e","shouldFinishStubbingBeforeValidatingThrowable()-e"],["differentMethod","shouldGetResultsForMethods()-differentMethod"],["e","shouldGetResultsForMethods()-e"],["differentMethod","shouldGetEmptyResultIfMethodsDontMatch()-differentMethod"],["e","shouldAddThrowableForVoidMethod()-e"],["e","shouldValidateThrowableForVoidMethod()-e"],["e","shouldValidateNullThrowable()-e"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.stubbing;",nl,nl,ip," java.nio.charset.",T(0),";",nl,nl,ip," org.junit.",T(1),";",nl,ip," org.junit.",T(2),";",nl,ip," org.mockito.",T(3),";",nl,ip," org.mockito.exceptions.base.",T(4),";",nl,ip," org.mockito.internal.invocation.",T(5),";",nl,ip," org.mockito.internal.invocation.",T(6),";",nl,ip," org.mockito.internal.invocation.",T(7),";",nl,ip," org.mockito.internal.progress.",T(8),";",nl,nl,C(9,[],$(pu,_,c,_,I("StubberTest"),_,ex,_,T(3),B(nl,nl,w(4),F(pi,_,T(10),_,I("stubber"),";"),nl,w(4),F(pi,_,T(8),_,I("state"),";"),nl,w(4),F(pi,_,T(5),_,I("simpleMethod"),";"),nl,w(4),nl,w(4),M(0,[],[],$("@",T(1),nl,w(4),pu,_,v,_,I("setup"),P(),_,B(nl,w(8),G(9,"fi","state")," = ",n,_,N(1),P(),";",nl,w(8),nl,w(8),G(9,"fi","stubber")," = ",n,_,N(2),P(G(9,"fi","state")),";",nl,w(8),G(9,"fi","stubber"),".",N(3),P(n,_,N(4),P(),".",N(5),P()),";",nl,w(8),nl,w(8),G(9,"fi","simpleMethod")," = ",n,_,N(4),P(),".",N(6),P(),".",N(7),P(),";",nl,w(4)))),nl,nl,w(4),M(8,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldFinishStubbingBeforeValidatingThrowable"),P(),_,ts,_,T(12),_,B(nl,w(8),G(9,"fi","state"),".",N(9),P(),";",nl,w(8),tr,_,B(nl,w(12),G(9,"fi","stubber"),".",N(10),P(n,_,N(11),P()),";",nl,w(12),N(12),P(),";",nl,w(8)),_,ct,_,P(V(0,$(T(4),_,I("e")))),_,B(nl,w(12),G(9,"fi","state"),".",N(13),P(),";",nl,w(8)),nl,w(4)))),nl,w(4),nl,w(4),M(14,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldFinishStubbingOnAddingReturnValue"),P(),_,ts,_,T(12),_,B(nl,w(8),G(9,"fi","state"),".",N(9),P(),";",nl,w(8),G(9,"fi","stubber"),".",N(15),P(L("\"test\"")),";",nl,w(8),G(9,"fi","state"),".",N(13),P(),";",nl,w(4)))),nl,w(4),nl,w(4),M(16,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldGetResultsForMethods"),P(),_,ts,_,T(13),_,B(nl,w(8),G(9,"fi","stubber"),".",N(3),P(n,_,N(17),P(G(9,"fi","simpleMethod"))),";",nl,w(8),G(9,"fi","stubber"),".",N(15),P(L("\"simpleMethod\"")),";",nl,w(8),nl,w(8),V(1,$(T(5),_,I("differentMethod")," = ",n,_,N(4),P(),".",N(18),P(),".",N(7),P(),";")),nl,w(8),G(9,"fi","stubber"),".",N(3),P(n,_,N(17),P(W(1))),";",nl,w(8),G(9,"fi","stubber"),".",N(10),P(n,_,N(19),P()),";",nl,w(8),nl,w(8),N(20),P(L("\"simpleMethod\""),", ",G(9,"fi","stubber"),".",N(21),P(G(9,"fi","simpleMethod"))),";",nl,w(8),nl,w(8),tr,_,B(nl,w(12),G(9,"fi","stubber"),".",N(21),P(W(1)),";",nl,w(12),N(12),P(),";",nl,w(8)),_,ct,_,P(V(2,$(T(16),_,I("e")))),_,B(),nl,w(4)))),nl,w(4),nl,w(4),M(22,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldGetEmptyResultIfMethodsDontMatch"),P(),_,ts,_,T(13),_,B(nl,w(8),G(9,"fi","stubber"),".",N(3),P(n,_,N(17),P(G(9,"fi","simpleMethod"))),";",nl,w(8),G(9,"fi","stubber"),".",N(15),P(L("\"simpleMethod\"")),";",nl,w(8),nl,w(8),V(3,$(T(5),_,I("differentMethod")," = ",n,_,N(4),P(),".",N(18),P(),".",N(7),P(),";")),nl,w(8),nl,w(8),N(20),P(L("null"),", ",G(9,"fi","stubber"),".",N(21),P(W(3))),";",nl,w(4)))),nl,w(4),nl,w(4),M(23,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldAddThrowableForVoidMethod"),P(),_,ts,_,T(13),_,B(nl,w(8),G(9,"fi","stubber"),".",N(24),P(n,_,N(19),P()),";",nl,w(8),G(9,"fi","stubber"),".",N(25),P(n,_,N(17),P(G(9,"fi","simpleMethod"))),";",nl,w(8),nl,w(8),tr,_,B(nl,w(12),G(9,"fi","stubber"),".",N(21),P(G(9,"fi","simpleMethod")),";",nl,w(12),N(12),P(),";",nl,w(8)),_,ct,_,P(V(4,$(T(16),_,I("e")))),_,B(),nl,w(4)))),nl,w(4),nl,w(4),M(26,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldValidateThrowableForVoidMethod"),P(),_,ts,_,T(13),_,B(nl,w(8),G(9,"fi","stubber"),".",N(24),P(n,_,N(11),P()),";",nl,w(8),nl,w(8),tr,_,B(nl,w(12),G(9,"fi","stubber"),".",N(25),P(n,_,N(17),P(G(9,"fi","simpleMethod"))),";",nl,w(12),N(12),P(),";",nl,w(8)),_,ct,_,P(V(5,$(T(4),_,I("e")))),_,B(),nl,w(4)))),nl,w(4),nl,w(4),M(27,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldValidateNullThrowable"),P(),_,ts,_,T(13),_,B(nl,w(8),tr,_,B(nl,w(12),G(9,"fi","stubber"),".",N(10),P(L("null")),";",nl,w(12),N(12),P(),";",nl,w(8)),_,ct,_,P(V(6,$(T(4),_,I("e")))),_,B(),nl,w(4)))),nl,w(4),nl,w(4),M(28,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldLetSettingProperCheckedException"),P(),_,ts,_,T(13),_,B(nl,w(8),G(9,"fi","stubber"),".",N(3),P(n,_,N(4),P(),".",N(29),P(L("\"canThrowException\"")),".",N(5),P()),";",nl,w(8),G(9,"fi","stubber"),".",N(10),P(n,_,N(30),P()),";",nl,w(4)))),nl,w(4),nl,w(4),C(16,[],$("@",T(18),P(L("\"serial\"")),_,c,_,I("MyException"),_,ex,_,T(19),_,B())),";",nl))));}});