defineStructure(
"Matches",function(factory){with(factory) { typeTable(["org.hamcrest.Description","it"],["org.mockito.ArgumentMatcher","cl"],["org.mockito.internal.matchers.Matches","cl"],["java.lang.Object","cl"],["java.lang.String","cl"]),methodTable([2,"Matches",[4],"co"],[2,"matches",[3],"me"],[1,"matches",[3],"me"],[4,"matches",[4],"me"],[2,"describeTo",[0],"me"],[1,"describeTo",[0],"me"],[0,"appendText",[4],"me"],[4,"replaceAll",[4,4],"me"]),localVariableTable(["regex","<init>(java.lang.String)-regex"],["actual","matches(java.lang.Object)-actual"],["description","describeTo(org.hamcrest.Description)-description"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.matchers;",nl,nl,ip," org.hamcrest.",T(0),";",nl,ip," org.mockito.",T(1),";",nl,nl,nl,C(2,[],$(pu,_,c,_,I("Matches"),_,ex,_,T(1),"&lt;",T(3),"> ",B(nl,nl,w(4),F(pi,_,f,_,T(4),_,I("regex"),";"),nl,nl,w(4),M(0,[],[],$(pu," Matches",P(V(0,$(T(4),_,I("regex")))),_,B(nl,w(8),t,".",G(2,"fi","regex")," = ",W(0),";",nl,w(4)))),nl,nl,w(4),M(1,[2],[],$(pu,_,b,_,I("matches"),P(V(1,$(T(3),_,I("actual")))),_,B(nl,w(8),r,_,P(W(1),_,is,_,T(4))," &amp;&amp; ",P(P(T(4)),_,W(1)),".",N(3),P(G(2,"fi","regex")),";",nl,w(4)))),nl,nl,w(4),M(4,[5],[],$(pu,_,v,_,I("describeTo"),P(V(2,$(T(0),_,I("description")))),_,B(nl,w(8),W(2),".",N(6),P(L("\"matches(\\\"\"")," + ",G(2,"fi","regex"),".",N(7),P(L("\"\\\\\\\\\""),", ",L("\"\\\\\\\\\\\\\\\\\"")),nl,w(16),"+ ",L("\"\\\")\"")),";",nl,w(4)))),nl))),nl);}});