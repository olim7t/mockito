defineStructure(
"EqualsTest",function(factory){with(factory) { typeTable(["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.internal.matchers.EqualsTest","cl"],["junit.framework.Assert","cl"],["java.lang.Object","cl"],["org.mockito.internal.matchers.Equals","cl"],["java.lang.Integer","cl"],["java.lang.UnsupportedOperationException","cl"]),methodTable([2,"shouldBeEqual",[],"me"],[3,"assertEquals",[4,4],"st me"],[5,"Equals",[4],"co"],[6,"Integer",["int"],"co"],[3,"assertFalse",["boolean"],"st me"],[5,"equals",[4],"me"],[5,"hashCode",[],"me"],[3,"fail",[],"st me"]),localVariableTable(["expected","shouldBeEqual()-expected"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.matchers;",nl,nl,ip," org.junit.",T(0),";",nl,ip," org.mockito.",T(1),";",nl,nl,nl,C(2,[],$(pu,_,c,_,I("EqualsTest"),_,ex,_,T(1),_,B(nl,w(4),nl,w(4),M(0,[],[],$("@",T(0),nl,w(4),pu,_,v,_,I("shouldBeEqual"),P(),_,B(nl,w(8),N(1),P(n,_,N(2),P(L("null")),", ",n,_,N(2),P(L("null"))),";",nl,w(8),N(1),P(n,_,N(2),P(n,_,N(3),P(L("2"))),", ",n,_,N(2),P(n,_,N(3),P(L("2")))),";",nl,w(8),N(4),P(n,_,N(2),P(L("null")),".",N(5),P(L("null"))),";",nl,w(8),N(4),P(n,_,N(2),P(L("null")),".",N(5),P(L("\"Test\""))),";",nl,w(8),tr,_,B(nl,w(12),n,_,N(2),P(L("null")),".",N(6),P(),";",nl,w(12),N(7),P(),";",nl,w(8)),_,ct,_,P(V(0,$(T(7),_,I("expected")))),_,B(nl,w(8)),nl,w(4)))),nl))),nl);}});