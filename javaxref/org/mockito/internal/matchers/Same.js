defineStructure(
"Same",function(factory){with(factory) { typeTable(["org.hamcrest.Description","it"],["org.mockito.ArgumentMatcher","cl"],["org.mockito.internal.matchers.Same","cl"],["java.lang.Object","cl"],["java.lang.String","cl"],["java.lang.Character","cl"]),methodTable([2,"Same",[3],"co"],[2,"matches",[3],"me"],[1,"matches",[3],"me"],[2,"describeTo",[0],"me"],[1,"describeTo",[0],"me"],[0,"appendText",[4],"me"],[2,"appendQuoting",[0],"me"],[3,"toString",[],"me"]),localVariableTable(["wanted","<init>(java.lang.Object)-wanted"],["actual","matches(java.lang.Object)-actual"],["description","describeTo(org.hamcrest.Description)-description"],["description","appendQuoting(org.hamcrest.Description)-description"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.matchers;",nl,nl,ip," org.hamcrest.",T(0),";",nl,ip," org.mockito.",T(1),";",nl,nl,nl,C(2,[],$(pu,_,c,_,I("Same"),_,ex,_,T(1),"&lt;",T(3),"> ",B(nl,nl,w(4),F(pi,_,f,_,T(3),_,I("wanted"),";"),nl,nl,w(4),M(0,[],[],$(pu," Same",P(V(0,$(T(3),_,I("wanted")))),_,B(nl,w(8),t,".",G(2,"fi","wanted")," = ",W(0),";",nl,w(4)))),nl,nl,w(4),M(1,[2],[],$(pu,_,b,_,I("matches"),P(V(1,$(T(3),_,I("actual")))),_,B(nl,w(8),r,_,G(2,"fi","wanted")," == ",W(1),";",nl,w(4)))),nl,nl,w(4),M(3,[4],[],$(pu,_,v,_,I("describeTo"),P(V(2,$(T(0),_,I("description")))),_,B(nl,w(8),W(2),".",N(5),P(L("\"same(\"")),";",nl,w(8),N(6),P(W(2)),";",nl,w(8),W(2),".",N(5),P(G(2,"fi","wanted"),".",N(7),P()),";",nl,w(8),N(6),P(W(2)),";",nl,w(8),W(2),".",N(5),P(L("\")\"")),";",nl,w(4)))),nl,nl,w(4),M(6,[],[],$(pi,_,v,_,I("appendQuoting"),P(V(3,$(T(0),_,I("description")))),_,B(nl,w(8),i,_,P(G(2,"fi","wanted"),_,is,_,T(4)),_,B(nl,w(12),W(3),".",N(5),P(L("\"\\\"\"")),";",nl,w(8)),_,e,_,i,_,P(G(2,"fi","wanted"),_,is,_,T(5)),_,B(nl,w(12),W(3),".",N(5),P(L("\"'\"")),";",nl,w(8)),nl,w(4)))),nl))),nl);}});