defineStructure(
"VerificationModeImplTest",function(factory){with(factory) { typeTable(["java.util.Arrays","cl"],["org.mockito.internal.progress.VerificationModeImpl","cl"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.exceptions.base.MockitoException","cl"],["org.mockito.internal.progress.VerificationModeImplTest","cl"],["java.lang.Exception","cl"],["junit.framework.Assert","cl"],["java.lang.String","cl"],["java.lang.Throwable","cl"],["java.lang.Integer","cl"],["java.util.List","it"],["java.lang.Object","cl"]),methodTable([5,"shouldKnowIfNumberOfInvocationsMatters",[],"me"],[1,"atLeastOnce",[],"st me"],[7,"assertTrue",["boolean"],"st me"],[1,"atLeastOnceMode",[],"me"],[1,"times",["int"],"st me"],[7,"assertFalse",["boolean"],"st me"],[5,"shouldNotAllowCreatingModeWithNegativeNumberOfInvocations",[],"me"],[7,"fail",[],"st me"],[7,"assertEquals",[8,8],"st me"],[9,"getMessage",[],"me"],[5,"shouldKnowIfIsMissingMethodMode",[],"me"],[1,"missingMethodMode",[],"me"],[1,"noMoreInteractions",[],"st me"],[5,"shouldKnowIfIsMissingMethodInOrderMode",[],"me"],[1,"inOrder",[10,11],"st me"],[0,"asList",["java.lang.Object[]"],"st me"],[1,"missingMethodInOrderMode",[],"me"],[5,"shouldKnowIfIsInOrderMode",[],"me"],[12,"Object",[],"co"],[1,"inOrderMode",[],"me"],[5,"shouldKnowIfIsAtLeastOnceMode",[],"me"],[5,"shouldKnowIfMatchesActualInvocationCount",[],"me"],[1,"matchesActualCount",["int"],"me"],[5,"shouldKnowIfMatchesActualInvocationCountWhenAtLeastOnceMode",[],"me"],[5,"shouldKnowIfTooLittleActualInvocations",[],"me"],[1,"tooLittleActualInvocations",["int"],"me"],[5,"shouldKnowIfTooManyActualInvocations",[],"me"],[1,"tooManyActualInvocations",["int"],"me"],[5,"shouldKnowIfWantedCountIsZero",[],"me"],[1,"neverWanted",[],"me"],[5,"shouldKnowIfExactNumberOfInvocationsMode",[],"me"],[1,"exactNumberOfInvocationsMode",[],"me"],[5,"shouldKnowIfNeverWantedButInvoked",[],"me"],[1,"neverWantedButInvoked",["int"],"me"]),localVariableTable(["mode","shouldKnowIfNumberOfInvocationsMatters()-mode"],["e","shouldNotAllowCreatingModeWithNegativeNumberOfInvocations()-e"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.progress;",nl,nl,ip,_,s," java.util.",T(0),".*;",nl,ip,_,s," org.mockito.internal.progress.",T(1),".*;",nl,nl,ip," org.junit.",T(2),";",nl,ip," org.mockito.",T(3),";",nl,ip," org.mockito.exceptions.base.",T(4),";",nl,nl,C(5,[],$(pu,_,c,_,I("VerificationModeImplTest"),_,ex,_,T(3),_,B(nl,nl,w(4),M(0,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfNumberOfInvocationsMatters"),P(),_,ts,_,T(6),_,B(nl,w(8),V(0,$(T(1),_,I("mode")," = ",N(1),P(),";")),nl,w(8),N(2),P(W(0),".",N(3),P()),";",nl,w(8),nl,w(8),W(0)," = ",N(4),P(L("50")),";",nl,w(8),N(5),P(W(0),".",N(3),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(6,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldNotAllowCreatingModeWithNegativeNumberOfInvocations"),P(),_,ts,_,T(6),_,B(nl,w(8),tr,_,B(nl,w(12),N(4),P("-",L("50")),";",nl,w(12),N(7),P(),";",nl,w(8)),_,ct,_,P(V(1,$(T(4),_,I("e")))),_,B(nl,w(12),N(8),P(L("\"Negative value is not allowed here\""),", ",W(1),".",N(9),P()),";",nl,w(8)),nl,w(4)))),nl,w(4),nl,w(4),M(10,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfIsMissingMethodMode"),P(),_,ts,_,T(6),_,B(nl,w(8),N(2),P(N(1),P(),".",N(11),P()),";",nl,w(8),N(2),P(N(4),P(L("1")),".",N(11),P()),";",nl,w(8),N(2),P(N(4),P(L("10")),".",N(11),P()),";",nl,w(8),nl,w(8),N(5),P(N(12),P(),".",N(11),P()),";",nl,w(8),N(5),P(N(4),P(L("0")),".",N(11),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(13,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfIsMissingMethodInOrderMode"),P(),_,ts,_,T(6),_,B(nl,w(8),N(2),P(N(14),P(L("null"),", ",N(15),P(L("\"mock\""))),".",N(16),P()),";",nl,w(8),N(2),P(N(14),P(L("1"),", ",N(15),P(L("\"mock\""))),".",N(16),P()),";",nl,w(8),N(2),P(N(14),P(L("10"),", ",N(15),P(L("\"mock\""))),".",N(16),P()),";",nl,w(8),nl,w(8),N(5),P(N(4),P(L("10")),".",N(16),P()),";",nl,w(8),N(5),P(N(12),P(),".",N(16),P()),";",nl,w(8),N(5),P(N(4),P(L("0")),".",N(16),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(17,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfIsInOrderMode"),P(),_,ts,_,T(6),_,B(nl,w(8),N(2),P(N(14),P(L("1"),", ",N(15),P(n,_,N(18),P())),".",N(19),P()),";",nl,w(8),nl,w(8),N(5),P(N(4),P(L("0")),".",N(19),P()),";",nl,w(8),N(5),P(N(4),P(L("2")),".",N(19),P()),";",nl,w(8),N(5),P(N(1),P(),".",N(19),P()),";",nl,w(8),N(5),P(N(12),P(),".",N(19),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(20,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfIsAtLeastOnceMode"),P(),_,ts,_,T(6),_,B(nl,w(8),N(2),P(N(1),P(),".",N(3),P()),";",nl,w(8),nl,w(8),N(5),P(N(4),P(L("0")),".",N(3),P()),";",nl,w(8),N(5),P(N(4),P(L("2")),".",N(3),P()),";",nl,w(8),N(5),P(N(12),P(),".",N(3),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(21,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfMatchesActualInvocationCount"),P(),_,ts,_,T(6),_,B(nl,w(8),N(5),P(N(4),P(L("1")),".",N(22),P(L("0"))),";",nl,w(8),N(5),P(N(4),P(L("1")),".",N(22),P(L("2"))),";",nl,w(8),N(5),P(N(4),P(L("100")),".",N(22),P(L("200"))),";",nl,w(8),nl,w(8),N(2),P(N(4),P(L("1")),".",N(22),P(L("1"))),";",nl,w(8),N(2),P(N(4),P(L("100")),".",N(22),P(L("100"))),";",nl,w(4)))),nl,w(4),nl,w(4),M(23,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfMatchesActualInvocationCountWhenAtLeastOnceMode"),P(),_,ts,_,T(6),_,B(nl,w(8),N(5),P(N(1),P(),".",N(22),P(L("0"))),";",nl,w(8),nl,w(8),N(2),P(N(1),P(),".",N(22),P(L("1"))),";",nl,w(8),N(2),P(N(1),P(),".",N(22),P(L("100"))),";",nl,w(4)))),nl,w(4),nl,w(4),M(24,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfTooLittleActualInvocations"),P(),_,ts,_,T(6),_,B(nl,w(8),N(2),P(N(4),P(L("1")),".",N(25),P(L("0"))),";",nl,w(8),N(2),P(N(4),P(L("100")),".",N(25),P(L("99"))),";",nl,w(8),nl,w(8),N(5),P(N(4),P(L("0")),".",N(25),P(L("0"))),";",nl,w(8),N(5),P(N(4),P(L("1")),".",N(25),P(L("1"))),";",nl,w(8),N(5),P(N(4),P(L("1")),".",N(25),P(L("2"))),";",nl,w(4)))),nl,w(4),nl,w(4),M(26,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfTooManyActualInvocations"),P(),_,ts,_,T(6),_,B(nl,w(8),N(2),P(N(4),P(L("0")),".",N(27),P(L("1"))),";",nl,w(8),N(2),P(N(4),P(L("99")),".",N(27),P(L("100"))),";",nl,w(8),nl,w(8),N(5),P(N(4),P(L("0")),".",N(27),P(L("0"))),";",nl,w(8),N(5),P(N(4),P(L("1")),".",N(27),P(L("1"))),";",nl,w(8),N(5),P(N(4),P(L("2")),".",N(27),P(L("1"))),";",nl,w(4)))),nl,w(4),nl,w(4),M(28,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfWantedCountIsZero"),P(),_,ts,_,T(6),_,B(nl,w(8),N(2),P(N(4),P(L("0")),".",N(29),P()),";",nl,w(8),nl,w(8),N(5),P(N(4),P(L("1")),".",N(29),P()),";",nl,w(8),N(5),P(N(4),P(L("20")),".",N(29),P()),";",nl,w(8),N(5),P(N(1),P(),".",N(29),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(30,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfExactNumberOfInvocationsMode"),P(),_,ts,_,T(6),_,B(nl,w(8),N(2),P(N(4),P(L("0")),".",N(31),P()),";",nl,w(8),N(2),P(N(4),P(L("1")),".",N(31),P()),";",nl,w(8),N(2),P(N(1),P(),".",N(31),P()),";",nl,w(8),nl,w(8),N(5),P(N(12),P(),".",N(31),P()),";",nl,w(8),N(5),P(N(14),P(L("1"),", ",N(15),P(n,_,N(18),P())),".",N(31),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(32,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("shouldKnowIfNeverWantedButInvoked"),P(),_,ts,_,T(6),_,B(nl,w(8),N(5),P(N(4),P(L("1")),".",N(33),P(L("0"))),";",nl,w(8),N(5),P(N(4),P(L("10")),".",N(33),P(L("20"))),";",nl,w(8),N(5),P(N(4),P(L("0")),".",N(33),P(L("0"))),";",nl,w(8),nl,w(8),N(5),P(N(1),P(),".",N(33),P(L("0"))),";",nl,w(8),N(5),P(N(1),P(),".",N(33),P(L("1"))),";",nl,w(8),nl,w(8),N(2),P(N(4),P(L("0")),".",N(33),P(L("1"))),";",nl,w(8),N(2),P(N(4),P(L("0")),".",N(33),P(L("10"))),";",nl,w(4)))),nl))));}});