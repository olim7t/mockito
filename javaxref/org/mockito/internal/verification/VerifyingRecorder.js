defineStructure(
"VerifyingRecorder",function(factory){with(factory) { typeTable(["java.util.List","it"],["org.mockito.internal.invocation.AllInvocationsFinder","cl"],["org.mockito.internal.invocation.Invocation","cl"],["org.mockito.internal.invocation.InvocationMatcher","cl"],["org.mockito.internal.progress.VerificationModeImpl","cl"],["org.mockito.internal.verification.VerifyingRecorder","cl"],["org.mockito.internal.verification.RegisteredInvocations","cl"],["org.mockito.internal.verification.Verifier","it"]),methodTable([6,"RegisteredInvocations",[],"co"],[5,"VerifyingRecorder",[1,0],"co"],[5,"recordInvocation",[2],"me"],[6,"add",[2],"me"],[5,"eraseLastInvocation",[],"me"],[6,"removeLast",[],"me"],[5,"getRegisteredInvocations",[],"me"],[6,"getVerifiableInvocations",[],"me"],[5,"verify",[4],"me"],[5,"verify",[3,4],"me"],[4,"inOrderMode",[],"me"],[1,"getAllInvocations",[0],"me"],[4,"getMocksToBeVerifiedInOrder",[],"me"],[7,"verify",[0,3,4],"me"]),localVariableTable(["globalInvocationsFinder","<init>(org.mockito.internal.invocation.AllInvocationsFinder,java.util.List)-globalInvocationsFinder"],["verifiers","<init>(org.mockito.internal.invocation.AllInvocationsFinder,java.util.List)-verifiers"],["invocation","recordInvocation(org.mockito.internal.invocation.Invocation)-invocation"],["mode","verify(org.mockito.internal.progress.VerificationModeImpl)-mode"],["wanted","verify(org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-wanted"],["mode","verify(org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-mode"],["invocations","verify(org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-invocations"],["verifier","verify(org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.progress.VerificationModeImpl)-verifier"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.verification;",nl,nl,ip," java.util.",T(0),";",nl,nl,ip," org.mockito.internal.invocation.",T(1),";",nl,ip," org.mockito.internal.invocation.",T(2),";",nl,ip," org.mockito.internal.invocation.",T(3),";",nl,ip," org.mockito.internal.progress.",T(4),";",nl,nl,C(5,[],$(pu,_,c,_,I("VerifyingRecorder"),_,B(nl,nl,w(4),F(pi,_,T(6),_,I("registeredInvocations")," = ",n,_,N(0),P(),";"),nl,nl,w(4),F(pi,_,f,_,T(0),"&lt;? ",ex,_,T(7),"> ",I("verifiers"),";"),nl,w(4),F(pi,_,f,_,T(1),_,I("invocationsFinder"),";"),nl,nl,w(4),M(1,[],[],$(pu," VerifyingRecorder",P(V(0,$(T(1),_,I("globalInvocationsFinder"))),", ",V(1,$(T(0),"&lt;? ",ex,_,T(7),"> ",I("verifiers")))),_,B(nl,w(8),t,".",G(5,"fi","invocationsFinder")," = ",W(0),";",nl,w(8),t,".",G(5,"fi","verifiers")," = ",W(1),";",nl,w(4)))),nl,nl,w(4),M(2,[],[],$(pu,_,v,_,I("recordInvocation"),P(V(2,$(T(2),_,I("invocation")))),_,B(nl,w(8),G(5,"fi","registeredInvocations"),".",N(3),P(W(2)),";",nl,w(4)))),nl,nl,w(4),M(4,[],[],$(pu,_,v,_,I("eraseLastInvocation"),P(),_,B(nl,w(8),G(5,"fi","registeredInvocations"),".",N(5),P(),";",nl,w(4)))),nl,nl,w(4),M(6,[],[],$(pu,_,T(0),"&lt;",T(2),"> ",I("getRegisteredInvocations"),P(),_,B(nl,w(8),r,_,G(5,"fi","registeredInvocations"),".",N(7),P(),";",nl,w(4)))),nl,nl,w(4),M(8,[],[],$(pu,_,v,_,I("verify"),P(V(3,$(T(4),_,I("mode")))),_,B(nl,w(8),N(9),P(L("null"),", ",W(3)),";",nl,w(4)))),nl,nl,w(4),M(9,[],[],$(pu,_,v,_,I("verify"),P(V(4,$(T(3),_,I("wanted"))),", ",V(5,$(T(4),_,I("mode")))),_,B(nl,w(8),V(6,$(T(0),"&lt;",T(2),"> ",I("invocations"),";")),nl,w(8),i,_,P(W(5),".",N(10),P()),_,B(nl,w(12),W(6)," = ",G(5,"fi","invocationsFinder"),".",N(11),P(W(5),".",N(12),P()),";",nl,w(8)),_,e,_,B(nl,w(12),W(6)," = ",N(6),P(),";",nl,w(8)),nl,nl,w(8),fo,_,P(V(7,$(T(7),_,I("verifier")))," : ",G(5,"fi","verifiers")),_,B(nl,w(12),W(7),".",N(13),P(W(6),", ",W(4),", ",W(5)),";",nl,w(8)),nl,w(4)))),nl))));}});