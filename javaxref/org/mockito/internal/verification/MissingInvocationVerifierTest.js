defineStructure(
"MissingInvocationVerifierTest",function(factory){with(factory) { typeTable(["java.util.Arrays","cl"],["org.mockito.internal.progress.VerificationModeImpl","cl"],["java.util.List","it"],["org.junit.Before","an"],["org.junit.Test","an"],["org.mockito.TestBase","cl"],["org.mockito.exceptions.PrintableInvocation","it"],["org.mockito.exceptions.Reporter","cl"],["org.mockito.exceptions.base.HasStackTrace","it"],["org.mockito.internal.invocation.Invocation","cl"],["org.mockito.internal.invocation.InvocationBuilder","cl"],["org.mockito.internal.invocation.InvocationMatcher","cl"],["org.mockito.internal.verification.MissingInvocationVerifierTest","cl"],["org.mockito.internal.verification.MissingInvocationVerifier","cl"],["org.mockito.internal.verification.InvocationsFinderStub","cl"],["org.mockito.internal.verification.MissingInvocationVerifierTest$ReporterStub","cl"],["org.mockito.internal.invocation.InvocationsFinder","cl"],["java.lang.Object","cl"],["junit.framework.Assert","cl"],["java.lang.Override","an"]),methodTable([12,"setup",[],"me"],[15,"ReporterStub",[],"co"],[14,"InvocationsFinderStub",[],"co"],[13,"MissingInvocationVerifier",[16,7],"co"],[10,"InvocationBuilder",[],"co"],[10,"toInvocationMatcher",[],"me"],[0,"asList",["java.lang.Object[]"],"st me"],[10,"toInvocation",[],"me"],[12,"shouldNeverVerifyWhenModeIsNotMissingMethodMode",[],"me"],[13,"verify",[2,11,1],"me"],[1,"noMoreInteractions",[],"st me"],[12,"shouldAskFinderForActualInvocations",[],"me"],[2,"add",[17],"me"],[1,"atLeastOnce",[],"st me"],[18,"assertSame",[17,17],"st me"],[12,"shouldPassBecauseActualInvocationFound",[],"me"],[12,"shouldAskAnalyzerForSimilarInvocation",[],"me"],[12,"shouldReportWantedButNotInvoked",[],"me"],[18,"assertTrue",["boolean"],"st me"],[2,"isEmpty",[],"me"],[18,"assertEquals",[17,17],"st me"],[18,"assertNull",[17],"st me"],[12,"shouldReportWantedInvocationDiffersFromActual",[],"me"],[18,"assertNotNull",[17],"st me"],[9,"getStackTrace",[],"me"],[15,"wantedButNotInvoked",[6],"me"],[7,"wantedButNotInvoked",[6],"me"],[15,"argumentsAreDifferent",[6,6,8],"me"],[7,"argumentsAreDifferent",[6,6,8],"me"]),localVariableTable(["mode","shouldAskFinderForActualInvocations()-mode"],["actualInvocation","shouldReportWantedInvocationDiffersFromActual()-actualInvocation"],["wanted","~ReporterStub-wantedButNotInvoked(org.mockito.exceptions.PrintableInvocation)-wanted"],["wanted","~ReporterStub-argumentsAreDifferent(org.mockito.exceptions.PrintableInvocation,org.mockito.exceptions.PrintableInvocation,org.mockito.exceptions.base.HasStackTrace)-wanted"],["actual","~ReporterStub-argumentsAreDifferent(org.mockito.exceptions.PrintableInvocation,org.mockito.exceptions.PrintableInvocation,org.mockito.exceptions.base.HasStackTrace)-actual"],["actualInvocationStackTrace","~ReporterStub-argumentsAreDifferent(org.mockito.exceptions.PrintableInvocation,org.mockito.exceptions.PrintableInvocation,org.mockito.exceptions.base.HasStackTrace)-actualInvocationStackTrace"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.internal.verification;",nl,nl,ip,_,s," java.util.",T(0),".*;",nl,ip,_,s," org.mockito.internal.progress.",T(1),".*;",nl,nl,ip," java.util.",T(2),";",nl,nl,ip," org.junit.",T(3),";",nl,ip," org.junit.",T(4),";",nl,ip," org.mockito.",T(5),";",nl,ip," org.mockito.exceptions.",T(6),";",nl,ip," org.mockito.exceptions.",T(7),";",nl,ip," org.mockito.exceptions.base.",T(8),";",nl,ip," org.mockito.internal.invocation.",T(9),";",nl,ip," org.mockito.internal.invocation.",T(10),";",nl,ip," org.mockito.internal.invocation.",T(11),";",nl,ip," org.mockito.internal.progress.",T(1),";",nl,nl,C(12,[],$(pu,_,c,_,I("MissingInvocationVerifierTest"),_,ex,_,T(5),_,B(nl,nl,w(4),F(pi,_,T(13),_,I("verifier"),";"),nl,w(4),nl,w(4),F(pi,_,T(14),_,I("finderStub"),";"),nl,w(4),F(pi,_,T(15),_,I("reporterStub"),";"),nl,w(4),nl,w(4),F(pi,_,T(11),_,I("wanted"),";"),nl,w(4),F(pi,_,T(2),"&lt;",T(9),"> ",I("invocations"),";"),nl,nl,w(4),M(0,[],[],$("@",T(3),nl,w(4),pu,_,v,_,I("setup"),P(),_,B(nl,w(8),G(12,"fi","reporterStub")," = ",n,_,N(1),P(),";",nl,w(8),G(12,"fi","finderStub")," = ",n,_,N(2),P(),";",nl,w(8),G(12,"fi","verifier")," = ",n,_,N(3),P(G(12,"fi","finderStub"),", ",G(12,"fi","reporterStub")),";",nl,w(8),nl,w(8),G(12,"fi","wanted")," = ",n,_,N(4),P(),".",N(5),P(),";",nl,w(8),G(12,"fi","invocations")," = ",N(6),P(n,_,N(4),P(),".",N(7),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(8,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldNeverVerifyWhenModeIsNotMissingMethodMode"),P(),_,B(nl,w(8),G(12,"fi","verifier"),".",N(9),P(L("null"),", ",L("null"),", ",N(10),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(11,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldAskFinderForActualInvocations"),P(),_,B(nl,w(8),G(12,"fi","finderStub"),".",G(14,"fi","actualToReturn"),".",N(12),P(n,_,N(4),P(),".",N(7),P()),";",nl,w(8),V(0,$(T(1),_,I("mode")," = ",N(13),P(),";")),nl,w(8),G(12,"fi","verifier"),".",N(9),P(G(12,"fi","invocations"),", ",G(12,"fi","wanted"),", ",W(0)),";",nl,w(8),nl,w(8),N(14),P(G(12,"fi","invocations"),", ",G(12,"fi","finderStub"),".",G(14,"fi","invocations")),";",nl,w(4)))),nl,w(4),nl,w(4),M(15,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldPassBecauseActualInvocationFound"),P(),_,B(nl,w(8),G(12,"fi","finderStub"),".",G(14,"fi","actualToReturn"),".",N(12),P(n,_,N(4),P(),".",N(7),P()),";",nl,w(8),G(12,"fi","verifier"),".",N(9),P(G(12,"fi","invocations"),", ",G(12,"fi","wanted"),", ",N(13),P()),";",nl,w(4)))),nl,w(4),nl,w(4),M(16,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldAskAnalyzerForSimilarInvocation"),P(),_,B(nl,w(8),G(12,"fi","verifier"),".",N(9),P(G(12,"fi","invocations"),", ",G(12,"fi","wanted"),", ",T(1),".",N(13),P()),";",nl,w(8),nl,w(8),N(14),P(G(12,"fi","invocations"),", ",G(12,"fi","finderStub"),".",G(14,"fi","invocations")),";",nl,w(4)))),nl,w(4),nl,w(4),M(17,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldReportWantedButNotInvoked"),P(),_,B(nl,w(8),N(18),P(G(12,"fi","finderStub"),".",G(14,"fi","actualToReturn"),".",N(19),P()),";",nl,w(8),G(12,"fi","finderStub"),".",G(14,"fi","similarToReturn")," = ",L("null"),";",nl,w(8),nl,w(8),G(12,"fi","verifier"),".",N(9),P(G(12,"fi","invocations"),", ",G(12,"fi","wanted"),", ",T(1),".",N(13),P()),";",nl,w(8),nl,w(8),N(20),P(G(12,"fi","wanted"),", ",G(12,"fi","reporterStub"),".",G(15,"fi","wanted")),";",nl,w(8),N(21),P(G(12,"fi","reporterStub"),".",G(15,"fi","actualInvocationStackTrace")),";",nl,w(4)))),nl,w(4),nl,w(4),M(22,[],[],$("@",T(4),nl,w(4),pu,_,v,_,I("shouldReportWantedInvocationDiffersFromActual"),P(),_,B(nl,w(8),N(18),P(G(12,"fi","finderStub"),".",G(14,"fi","actualToReturn"),".",N(19),P()),";",nl,w(8),V(1,$(T(9),_,I("actualInvocation")," = ",n,_,N(4),P(),".",N(7),P(),";")),nl,w(8),G(12,"fi","finderStub"),".",G(14,"fi","similarToReturn")," = ",W(1),";",nl,w(8),nl,w(8),G(12,"fi","verifier"),".",N(9),P(G(12,"fi","invocations"),", ",G(12,"fi","wanted"),", ",T(1),".",N(13),P()),";",nl,w(8),nl,w(8),N(23),P(G(12,"fi","reporterStub"),".",G(15,"fi","wanted")),";",nl,w(8),N(23),P(G(12,"fi","reporterStub"),".",G(15,"fi","actual")),";",nl,w(8),nl,w(8),N(14),P(W(1),".",N(24),P(),", ",G(12,"fi","reporterStub"),".",G(15,"fi","actualInvocationStackTrace")),";",nl,w(4)))),nl,w(4),nl,w(4),C(15,[],$(c," ReporterStub ",ex,_,T(7),_,B(nl,w(8),F(pi,_,T(6),_,I("wanted"),";"),nl,w(8),F(pi,_,T(6),_,I("actual"),";"),nl,w(8),F(pi,_,T(8),_,I("actualInvocationStackTrace"),";"),nl,w(8),M(25,[26],[],$("@",T(19),_,pu,_,v,_,I("wantedButNotInvoked"),P(V(2,$(T(6),_,I("wanted")))),_,B(nl,w(12),t,".",G(15,"fi","wanted")," = ",W(2),";",nl,w(8)))),nl,w(8),nl,w(8),M(27,[28],[],$("@",T(19),_,pu,_,v,_,I("argumentsAreDifferent"),P(V(3,$(T(6),_,I("wanted"))),", ",V(4,$(T(6),_,I("actual"))),", ",V(5,$(T(8),_,I("actualInvocationStackTrace")))),_,B(nl,w(20),t,".",G(15,"fi","wanted")," = ",W(3),";",nl,w(20),t,".",G(15,"fi","actual")," = ",W(4),";",nl,w(20),t,".",G(15,"fi","actualInvocationStackTrace")," = ",W(5),";",nl,w(8)))),nl,w(4)))),nl))),nl);}});