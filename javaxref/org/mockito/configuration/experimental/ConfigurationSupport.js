defineStructure(
"ConfigurationSupport",function(factory){with(factory) { typeTable(["java.lang.reflect.Modifier","cl"],["org.mockito.internal.configuration.MockitoConfiguration","it"],["org.mockito.internal.configuration.Configuration","cl"],["org.mockito.internal.configuration.MockitoProperties","cl"],["org.mockito.invocation.InvocationOnMock","it"],["org.mockito.configuration.experimental.ConfigurationSupport","cl"],["java.lang.Object","cl"],["org.mockito.configuration.ReturnValues","it"],["java.lang.Class","cl"]),methodTable([5,"defaultValueFor",[4],"st me"],[7,"valueFor",[4],"me"],[5,"isMockable",[8],"st me"],[0,"isFinal",["int"],"st me"],[8,"getModifiers",[],"me"],[5,"getConfiguration",[],"st me"],[2,"instance",[],"st me"]),localVariableTable(["invocation","defaultValueFor(org.mockito.invocation.InvocationOnMock)-invocation"],["clazz","isMockable(java.lang.Class)-clazz"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.configuration.experimental;",nl,nl,ip," java.lang.reflect.",T(0),";",nl,nl,ip," org.mockito.internal.configuration.",T(1),";",nl,ip," org.mockito.internal.configuration.",T(2),";",nl,ip," org.mockito.internal.configuration.",T(3),";",nl,ip," org.mockito.invocation.",T(4),";",nl,nl,O("/**",nl," * Allows configuring Mockito to enable custom 'mocking style'. ",nl," * It can be useful when working with legacy code, etc.",nl," * &lt;p>",nl," * See examples from mockito/test/org/mockitousage/examples/configure subpackage. ",nl," * You may want to check out the project from svn repository to easily browse Mockito's test code.",nl," * &lt;p>",nl," * Basic example:",nl," * &lt;pre>",nl," *   //create an implementation of ReturnValues interface",nl," *   ",nl," *   public class FriendlyReturnValues implements ReturnValues {",nl," *",nl," *   public Object valueFor(InvocationOnMock invocation) {",nl," *",w(7),nl," *",w(7),"Class&lt;?> returnType = invocation.getMethod().getReturnType();",nl," *",w(7),nl," *",w(7),"Object defaultReturnValue = ConfigurationSupport.defaultValueFor(invocation);",nl," *",w(7),nl," *",w(7),"if (defaultReturnValue != null || !ConfigurationSupport.isMockable(returnType)) {",nl," *",w(11),"return defaultReturnValue;",nl," *",w(7),"} else { ",nl," *",w(11),"return Mockito.mock(returnType);",nl," *",w(7),"}",nl," *   }",nl," *   ",nl," *   //finally, change the configuration: ",nl," *   ",nl," *   ConfigurationSupport.getConfiguration().setReturnValues(new FriendlyReturnValues());",nl," * &lt;/pre>",nl," * &lt;p>",nl," * Configuring Mockito is a new concept that we evaluate. Please let us know if you find it useful/harmful. ",nl," */"),nl,C(5,[],$(pu,_,c,_,I("ConfigurationSupport"),_,B(nl,w(4),nl,w(4),O("/**",nl,w(5),"* this is what Mockito returns by default for given invocation ",nl,w(5),"* &lt;p>",nl,w(5),"* See examples in javadoc for {@link ConfigurationSupport}",nl,w(5),"* ",nl,w(5),"* @param invocation",nl,w(5),"* @return default return value",nl,w(5),"*/"),nl,w(4),M(0,[],[],$(pu,_,s,_,T(6),_,I("defaultValueFor"),P(V(0,$(T(4),_,I("invocation")))),_,B(nl,w(8),r,_,T(3),".",G(3,"st fi","DEFAULT_RETURN_VALUES"),".",N(1),P(W(0)),";",nl,w(4)))),nl,nl,w(4),O("/**",nl,w(5),"* returns true if Mockito CAN create mocks of the clazz",nl,w(5),"* &lt;p>",nl,w(5),"* See examples in javadoc for {@link ConfigurationSupport}",nl,w(5),"* ",nl,w(5),"* @param clazz",nl,w(5),"* @return ",nl,w(5),"*/"),nl,w(4),M(2,[],[],$(pu,_,s,_,b,_,I("isMockable"),P(V(1,$(T(8),"&lt;?> ",I("clazz")))),_,B(nl,w(8),r," !",T(0),".",N(3),P(W(1),".",N(4),P()),";",nl,w(4)))),nl,w(4),nl,w(4),O("/**",nl,w(5),"* returns a configuration object",nl,w(5),"* &lt;p>",nl,w(5),"* See examples in javadoc for {@link ConfigurationSupport}",nl,w(5),"* ",nl,w(5),"* @return",nl,w(5),"*/"),nl,w(4),M(5,[],[],$(pu,_,s,_,T(1),_,I("getConfiguration"),P(),_,B(nl,w(8),r,_,T(2),".",N(6),P(),";",nl,w(4)))),nl))));}});