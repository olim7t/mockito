defineStructure(
"ReturnValues",function(factory){with(factory) { typeTable(["org.mockito.configuration.experimental.ConfigurationSupport","cl"],["org.mockito.invocation.InvocationOnMock","it"],["org.mockito.configuration.ReturnValues","it"],["org.mockito.internal.configuration.DefaultReturnValues","cl"],["org.mockitousage.examples.configure.FriendlyReturnValues","cl"],["org.mockitousage.examples.configure.withstaticutility.AllowsFakingReturnValues$FakeReturnValues","st cl"],["java.lang.Object","cl"]),methodTable([2,"valueFor",[1],"me"],[5,"valueFor",[1],"me"],[4,"valueFor",[1],"me"],[3,"valueFor",[1],"me"]),localVariableTable(["invocation","valueFor(org.mockito.invocation.InvocationOnMock)-invocation"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito.configuration;",nl,nl,ip," org.mockito.configuration.experimental.",T(0),";",nl,ip," org.mockito.invocation.",T(1),";",nl,nl,O("/**",nl," * Configures return values for an unstubbed invocation",nl," * &lt;p>",nl," * See examples in javadoc for {@link ConfigurationSupport}",nl," */"),nl,C(2,[3,4,5],$(pu,_,it,_,I("ReturnValues"),_,B(nl,nl,w(4),O("/**",nl,w(5),"* returns value for an unstubbed invocation",nl,w(5),"* &lt;p>",nl,w(5),"* See examples in javadoc for {@link ConfigurationSupport}",nl,w(5),"* ",nl,w(5),"* @param invocation placeholder for mock and a method",nl,w(5),"* @return the return value",nl,w(5),"*/"),nl,w(4),M(0,[],[1,2,3],$(T(6),_,I("valueFor"),P(V(0,$(T(1),_,I("invocation")))),";")),nl))));}});