defineStructure(
"TestBase",function(factory){with(factory) { typeTable(["junit.framework.Assert","cl"],["org.hamcrest.Matcher","it"],["org.junit.Before","an"],["org.mockito.util.Assertor","it"],["org.mockito.TestBase","cl"],["org.mockito.MockitoTest","cl"],["org.mockito.configuration.experimental.ConfigurationTest","cl"],["org.mockito.exceptions.ReporterTest","cl"],["org.mockito.exceptions.base.CommonStackTraceRemoverTest","cl"],["org.mockito.exceptions.base.MockitoAssertionErrorTest","cl"],["org.mockito.exceptions.base.MockitoExceptionTest","cl"],["org.mockito.exceptions.base.StackTraceFilterTest","cl"],["org.mockito.exceptions.base.StackTraceRemoverTest","cl"],["org.mockito.internal.AllInvocationsFinderTest","cl"],["org.mockito.internal.MockHandlerTest","cl"],["org.mockito.internal.configuration.DefaultReturnValuesTest","cl"],["org.mockito.internal.creation.CglibTest","cl"],["org.mockito.internal.creation.MockFactoryTest","cl"],["org.mockito.internal.invocation.InvocationMatcherTest","cl"],["org.mockito.internal.invocation.InvocationTest","cl"],["org.mockito.internal.invocation.InvocationsFinderTest","cl"],["org.mockito.internal.matchers.EqualsTest","cl"],["org.mockito.internal.matchers.apachecommons.EqualsBuilderTest","cl"],["org.mockito.internal.progress.MockingProgressImplTest","cl"],["org.mockito.internal.progress.VerificationModeImplTest","cl"],["org.mockito.internal.stubbing.ResultTest","cl"],["org.mockito.internal.stubbing.StubberTest","cl"],["org.mockito.internal.util.DecamelizerTest","cl"],["org.mockito.internal.util.ListUtilTest","cl"],["org.mockito.internal.util.MockUtilTest","cl"],["org.mockito.internal.verification.MissingInvocationInOrderVerifierTest","cl"],["org.mockito.internal.verification.MissingInvocationVerifierTest","cl"],["org.mockito.internal.verification.NoMoreInvocationsVerifierTest","cl"],["org.mockito.internal.verification.NumberOfInvocationsInOrderVerifierTest","cl"],["org.mockito.internal.verification.NumberOfInvocationsVerifierTest","cl"],["org.mockito.internal.verification.VerifyingRecorderTest","cl"],["org.mockitousage.AnnotationsTest","cl"],["org.mockitousage.DescriptiveMessagesOnMisuseTest","cl"],["org.mockitousage.InvalidStateDetectionTest","cl"],["org.mockitousage.InvalidUsageTest","cl"],["org.mockitousage.MatchersMixedWithRawArgumentsTest","cl"],["org.mockitousage.MultiThreadedTest","cl"],["org.mockitousage.PointingStackTraceToActualInvocationChunkInOrderTest","cl"],["org.mockitousage.PointingStackTraceToActualInvocationChunkTest","cl"],["org.mockitousage.PointingStackTraceToActualInvocationInOrderTest","cl"],["org.mockitousage.PointingStackTraceToActualInvocationTest","cl"],["org.mockitousage.ReflectionMatchersTest","cl"],["org.mockitousage.ReplacingObjectMethodsTest","cl"],["org.mockitousage.StackTraceFilteringTest","cl"],["org.mockitousage.StackTrackeChangingTest","cl"],["org.mockitousage.UsingVarargsTest","cl"],["org.mockitousage.binding.BridgeMethodPuzzleTest","cl"],["org.mockitousage.binding.OverloadingPuzzleTest","cl"],["org.mockitousage.examples.use.ExampleTest","cl"],["org.mockitousage.matchers.AssertingMatchersTest","cl"],["org.mockitousage.matchers.ComparableMatchersTest","cl"],["org.mockitousage.matchers.CustomMatchersTest","cl"],["org.mockitousage.matchers.HamcrestMatchersTest","cl"],["org.mockitousage.matchers.InvalidUseOfMatchersTest","cl"],["org.mockitousage.matchers.MatchersTest","cl"],["org.mockitousage.matchers.MatchersToStringTest","cl"],["org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest","cl"],["org.mockitousage.stubbing.BasicStubbingTest","cl"],["org.mockitousage.stubbing.ReturningDefaultValuesTest","cl"],["org.mockitousage.stubbing.StubbingWithThrowablesTest","cl"],["org.mockitousage.verification.AtLeastOnceVerificationTest","cl"],["org.mockitousage.verification.BasicVerificationInOrderTest","cl"],["org.mockitousage.verification.BasicVerificationTest","cl"],["org.mockitousage.verification.DescriptiveMessagesOnVerificationInOrderErrorsTest","cl"],["org.mockitousage.verification.DescriptiveMessagesWhenTimesXVerificationFailsTest","cl"],["org.mockitousage.verification.DescriptiveMessagesWhenVerificationFailsTest","cl"],["org.mockitousage.verification.ExactNumberOfTimesVerificationTest","cl"],["org.mockitousage.verification.NoMoreInteractionsVerificationTest","cl"],["org.mockitousage.verification.RelaxedVerificationInOrderTest","cl"],["org.mockitousage.verification.SelectedMocksInOrderVerificationTest","cl"],["org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest","cl"],["org.mockitousage.verification.VerificationInOrderTest","cl"],["org.mockitousage.verification.VerificationOnMultipleMocksUsingMatchersTest","cl"],["org.mockitousage.verification.VerificationUsingMatchersTest","cl"],["org.mockito.Mockito","cl"],["org.mockito.internal.progress.MockingProgress","it"],["org.mockito.MockitoAnnotations","cl"],["java.lang.Object","cl"],["org.junit.Assert","cl"],["java.lang.String","cl"],["org.mockito.TestBase$0$0","st cl"],["java.lang.CharSequence","it"],["org.mockito.TestBase$1$0","st cl"],["java.lang.Throwable","cl"],["org.mockito.TestBase$2$0","st cl"],["org.mockito.TestBase$3$0","st cl"]),methodTable([4,"init",[],"me"],[80,"validateState",[],"me"],[81,"initMocks",[82],"st me"],[4,"assertThat",[82,3],"me"],[3,"assertValue",[82],"me"],[4,"assertThat",[82,1],"me"],[83,"assertThat",[82,1],"st me"],[4,"assertThat",[84,82,1],"me"],[83,"assertThat",[84,82,1],"st me"],[4,"contains",[84],"st me"],[85,"assertValue",[84],"me"],[0,"assertTrue",[84,"boolean"],"st me"],[84,"contains",[86],"me"],[4,"endsWith",[84],"st me"],[87,"assertValue",[84],"me"],[84,"endsWith",[84],"me"],[4,"messageContains",[84],"st me"],[89,"assertValue",[88],"me"],[88,"getMessage",[],"me"],[4,"causeMessageContains",[84],"st me"],[90,"assertValue",[88],"me"],[88,"getCause",[],"me"],[0,"assertNotNull",[84,82],"st me"]),localVariableTable(["o","assertThat(java.lang.Object,org.mockito.util.Assertor)-o"],["a","assertThat(java.lang.Object,org.mockito.util.Assertor)-a"],["actual","assertThat(java.lang.Object,org.hamcrest.Matcher)-actual"],["m","assertThat(java.lang.Object,org.hamcrest.Matcher)-m"],["message","assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)-message"],["actual","assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)-actual"],["m","assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)-m"],["substring","contains(java.lang.String)-substring"],["value","~$1-assertValue(java.lang.String)-value"],["substring","endsWith(java.lang.String)-substring"],["value","~$2-assertValue(java.lang.String)-value"],["text","messageContains(java.lang.String)-text"],["value","~$3-assertValue(java.lang.Throwable)-value"],["text","causeMessageContains(java.lang.String)-text"],["value","~$4-assertValue(java.lang.Throwable)-value"],["cause","~$4-assertValue(java.lang.Throwable)-cause"])
return classDef(O("/*",nl," * Copyright (c) 2007 Mockito contributors",nl," * This program is made available under the terms of the MIT License.",nl," */"),nl,pa," org.mockito;",nl,nl,ip," junit.framework.",T(0),";",nl,nl,ip," org.hamcrest.",T(1),";",nl,ip," org.junit.",T(2),";",nl,ip," org.mockito.util.",T(3),";",nl,nl,O("/**",nl," * the easiest way to make sure that tests clean up invalid state is to require",nl," * valid state for all tests.",nl," */"),nl,C(4,[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],$(pu,_,c,_,I("TestBase"),_,ex,_,T(0),_,B(nl,nl,w(4),M(0,[],[],$("@",T(2),nl,w(4),pu,_,v,_,I("init"),P(),_,B(nl,w(8),T(79),".",G(79,"st fi","MOCKING_PROGRESS"),".",N(1),P(),";",nl,w(8),T(81),".",N(2),P(t),";",nl,w(4)))),nl,w(4),nl,w(4),O("//I'm really tired of matchers, enter the assertor!"),nl,w(4),M(3,[],[],$(po," &lt;T> ",v,_,I("assertThat"),P(V(0,$("T ",I("o"))),", ",V(1,$(T(3),"&lt;T> ",I("a")))),_,B(nl,w(8),W(1),".",N(4),P(W(0)),";",nl,w(4)))),nl,w(4),nl,w(4),M(5,[],[],$(po," &lt;T> ",v,_,I("assertThat"),P(V(2,$("T ",I("actual"))),", ",V(3,$(T(1),"&lt;T> ",I("m")))),_,B(nl,w(8),"org.junit.",T(83),".",N(6),P(W(2),", ",W(3)),";",nl,w(4)))),nl,w(4),nl,w(4),M(7,[],[],$(po," &lt;T> ",v,_,I("assertThat"),P(V(4,$(T(84),_,I("message"))),", ",V(5,$("T ",I("actual"))),", ",V(6,$(T(1),"&lt;T> ",I("m")))),_,B(nl,w(8),"org.junit.",T(83),".",N(8),P(W(4),", ",W(5),", ",W(6)),";",nl,w(4)))),nl,w(4),nl,w(4),M(9,[],[],$(pu,_,s," &lt;T> ",T(3),"&lt;",T(84),"> ",I("contains"),P(V(7,$(f,_,T(84),_,I("substring")))),_,B(nl,w(8),r,_,n,_,T(3),"&lt;",T(84),">",P(),_,B(C(85,[],$(nl,w(12),M(10,[4],[],$(pu,_,v,_,I("assertValue"),P(V(8,$(T(84),_,I("value")))),_,B(nl,w(16),N(11),P(L("\"This substring: \\n\"")," + ",W(7)," + ",nl,w(24),L("\"\\nshould be inside of:\\n\"")," + ",W(8),nl,w(24),", ",W(8),".",N(12),P(W(7))),";",nl,w(12)))),nl,w(8)))),";",nl,w(4)))),nl,w(4),nl,w(4),M(13,[],[],$(pu,_,s," &lt;T> ",T(3),"&lt;",T(84),"> ",I("endsWith"),P(V(9,$(f,_,T(84),_,I("substring")))),_,B(nl,w(8),r,_,n,_,T(3),"&lt;",T(84),">",P(),_,B(C(87,[],$(nl,w(12),M(14,[4],[],$(pu,_,v,_,I("assertValue"),P(V(10,$(T(84),_,I("value")))),_,B(nl,w(16),N(11),P(L("\"This substring: \\n\"")," + ",W(9)," + ",nl,w(24),L("\"\\nshould be at the end of:\\n\"")," + ",W(10),nl,w(24),", ",W(10),".",N(15),P(W(9))),";",nl,w(12)))),nl,w(8)))),";",nl,w(4)))),nl,nl,w(4),M(16,[],[],$(pu,_,s," &lt;T> ",T(3),"&lt;",T(88),"> ",I("messageContains"),P(V(11,$(f,_,T(84),_,I("text")))),_,B(nl,w(8),r,_,n,_,T(3),"&lt;",T(88),">",P(),_,B(C(89,[],$(nl,w(12),M(17,[4],[],$(pu,_,v,_,I("assertValue"),P(V(12,$(T(88),_,I("value")))),_,B(nl,w(16),N(11),P(L("\"This substring: \\n\"")," + ",W(11)," + ",nl,w(24),L("\"\\nshould occur in this exception message:\"")," + ",W(12),".",N(18),P(),nl,w(24),", ",P(P(T(88)),_,W(12)),".",N(18),P(),".",N(12),P(W(11))),";",nl,w(12)))),nl,w(8)))),";",nl,w(4)))),nl,w(4),nl,w(4),M(19,[],[],$(pu,_,s," &lt;T> ",T(3),"&lt;",T(88),"> ",I("causeMessageContains"),P(V(13,$(f,_,T(84),_,I("text")))),_,B(nl,w(8),r,_,n,_,T(3),"&lt;",T(88),">",P(),_,B(C(90,[],$(nl,w(12),M(20,[4],[],$(pu,_,v,_,I("assertValue"),P(V(14,$(T(88),_,I("value")))),_,B(nl,w(16),V(15,$(T(88),_,I("cause")," = ",P(P(T(88)),_,W(14)),".",N(21),P(),";")),nl,w(16),N(22),P(L("\"Exception cause should not be null\""),", ",W(15)),";",nl,w(16),N(11),P(L("\"\\nException message >>>\"")," + ",W(15),".",N(18),P()," + ",L("\"\\n>>> should contain: \"")," + ",W(13),",",nl,w(24),W(15),".",N(18),P(),".",N(12),P(W(13))),";",nl,w(12)))),nl,w(8)))),";",nl,w(4)))),nl))));}});